{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "resourceGroup_name": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group for all resources."
      }
    },
    "storageSKU": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ]
    },
    "sqlserver_name": {
      "defaultValue": "saastack-sqlserver",
      "type": "string"
    },
    "sqlserver_admin_username": {
      "type": "string"
    },
    "sqlserver_admin_password": {
      "type": "string"
    },
    "sqlserver_database_name": {
      "defaultValue": "saastack-sqldatabase",
      "type": "string"
    },
    "sqlserver_elasticpool_name": {
      "defaultValue": "saastack-sqlpool",
      "type": "string"
    },
    "storageAccounts_name": {
      "defaultValue": "saastack",
      "type": "string"
    },
    "insights_name": {
      "defaultValue": "saastack-insights",
      "type": "string"
    },
    "serverfarms_appservices_name": {
      "defaultValue": "saastack-appplan",
      "type": "string"
    },
    "serverfarms_functions_name": {
      "defaultValue": "saastack-functions-appplan",
      "type": "string"
    },
    "sites_apihost1_name": {
      "defaultValue": "saastack-apihost1",
      "type": "string"
    },
    "sites_websitehost_name": {
      "defaultValue": "saastack-websitehost",
      "type": "string"
    },
    "sites_functions_name": {
      "defaultValue": "saastack-functions",
      "type": "string"
    },
    "serviceBus_namespace_name": {
      "defaultValue": "saastack-servicebus",
      "type": "string"
    }
  },
  "variables": { 
    "insights_analytics_name":"[concat(parameters('insights_name'), '-analytics')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[parameters('storageAccounts_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageSKU')]",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": false,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "largeFileSharesState": "Enabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [ ],
          "ipRules": [ ],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Sql/servers",
      "apiVersion": "2024-05-01-preview",
      "name": "[parameters('sqlserver_name')]",
      "location": "[parameters('location')]",
      "kind": "v12.0",
      "properties": {
        "administratorLogin": "[parameters('sqlserver_admin_username')]",
        "administratorLoginPassword": "[parameters('sqlserver_admin_password')]",
        "version": "12.0",
        "minimalTlsVersion": "None",
        "publicNetworkAccess": "Enabled",
        "restrictOutboundNetworkAccess": "Disabled"
      }
    },
    {
      "type": "Microsoft.Sql/servers/firewallRules",
      "apiVersion": "2024-05-01-preview",
      "name": "Allow Azure",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlserver_name'))]"
      ],
      "properties": {
        "endIpAddress": "0.0.0.0",
        "startIpAddress": "0.0.0.0"
      }
    },
    {
      "type": "Microsoft.Sql/servers/elasticPools",
      "apiVersion": "2024-05-01-preview",
      "name": "[concat(parameters('sqlserver_name'), '/', parameters('sqlserver_elasticpool_name'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlserver_name'))]"
      ],
      "sku": {
        "name": "GP_Gen5",
        "tier": "GeneralPurpose",
        "family": "Gen5",
        "capacity": 2
      },
      "kind": "vcore,pool",
      "properties": {
        "maxSizeBytes": 34359738368,
        "perDatabaseSettings": {
          "minCapacity": 0,
          "maxCapacity": 2
        },
        "zoneRedundant": false,
        "licenseType": "LicenseIncluded",
        "maintenanceConfigurationId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default')]",
        "availabilityZone": "NoPreference"
      }
    },
    {
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "2024-05-01-preview",
      "name": "[concat(parameters('sqlserver_name'), '/', parameters('sqlserver_database_name'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', parameters('sqlserver_name'))]",
        "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('sqlserver_name'), parameters('sqlserver_elasticpool_name'))]"
      ],
      "sku": {
        "name": "ElasticPool",
        "tier": "GeneralPurpose",
        "capacity": 0
      },
      "kind": "v12.0,user,vcore,pool",
      "properties": {
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "maxSizeBytes": 34359738368,
        "elasticPoolId": "[resourceId('Microsoft.Sql/servers/elasticPools', parameters('sqlserver_name'), parameters('sqlserver_elasticpool_name'))]",
        "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
        "zoneRedundant": false,
        "readScale": "Disabled",
        "requestedBackupStorageRedundancy": "Geo",
        "maintenanceConfigurationId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default')]",
        "isLedgerOn": false,
        "availabilityZone": "NoPreference"
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('insights_name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('insights_analytics_name'))]"
      ],
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('insights_analytics_name'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-08-01",
      "name": "[variables('insights_analytics_name')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Log Analytics",
        "ProjectName": "[parameters('insights_name')]"
      },
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 120,
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[parameters('serverfarms_appservices_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "F1",
        "tier": "Free",
        "size": "F1",
        "family": "F",
        "capacity": 0
      },
      "kind": "app",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[parameters('serverfarms_functions_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "perSiteScaling": false,
        "elasticScaleEnabled": false,
        "maximumElasticWorkerCount": 1,
        "isSpot": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-04-01",
      "name": "[parameters('sites_apihost1_name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appservices_name'))]",
        "[resourceId('Microsoft.Insights/components', parameters('insights_name'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_apihost1_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_apihost1_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appservices_name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('insights_name')), '2015-05-01').ConnectionString]"
            }
          ],
          "netFrameworkVersion": "v8.0",
          "use32BitWorkerProcess": false
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-04-01",
      "name": "[parameters('sites_websitehost_name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appservices_name'))]",
        "[resourceId('Microsoft.Insights/components', parameters('insights_name'))]"
      ],
      "kind": "app",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_websitehost_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_websitehost_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_appservices_name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('insights_name')), '2015-05-01').ConnectionString]"
            }
          ],
          "netFrameworkVersion": "v8.0",
          "use32BitWorkerProcess": false
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-04-01",
      "name": "[parameters('sites_functions_name')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_functions_name'))]",
        "[resourceId('Microsoft.Insights/components', parameters('insights_name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_name'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBus_namespace_name'), 'RootManageSharedAccessKey')]"
      ],
      "tags": {
        "hidden-link: /app-insights-resource-id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('resourceGroup_name'), '/providers/microsoft.insights/components/', parameters('insights_name'))]"
      },
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('sites_functions_name'), '.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('sites_functions_name'), '.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_functions_name'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('insights_name')), providers('Microsoft.Insights', 'components').apiVersions[0]).ConnectionString]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccounts_name'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "AzureWebJobsServiceBus",
              "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBus_namespace_name'), 'RootManageSharedAccessKey'), providers('Microsoft.ServiceBus', 'namespaces').apiVersions[0]).primaryConnectionString]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet-isolated"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccounts_name'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(parameters('sites_functions_name'))]"
            },
            {
              "name": "WEBSITE_USE_PLACEHOLDER_DOTNETISOLATED",
              "value": "1"
            }
          ],
          "netFrameworkVersion": "v8.0",
          "use32BitWorkerProcess": false
        },
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2024-01-01",
      "name": "[parameters('serviceBus_namespace_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "geoDataReplication": {
          "maxReplicationLagDurationInSeconds": 0,
          "locations": [
            {
              "locationName": "[parameters('location')]",
              "roleType": "Primary"
            }
          ]
        },
        "premiumMessagingPartitions": 0,
        "minimumTlsVersion": "1.2",
        "publicNetworkAccess": "Enabled",
        "disableLocalAuth": false,
        "zoneRedundant": true
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/authorizationrules",
      "apiVersion": "2024-01-01",
      "name": "[concat(parameters('serviceBus_namespace_name'), '/RootManageSharedAccessKey')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', parameters('serviceBus_namespace_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      }
    }
  ]
}