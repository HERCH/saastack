//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IdentityDomain {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("IdentityDomain.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Description is not valid.
        /// </summary>
        internal static string ApiKeyKeep_InvalidDescription {
            get {
                return ResourceManager.GetString("ApiKeyKeep_InvalidDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The API key is not valid.
        /// </summary>
        internal static string ApiKeyKeep_InvalidKey {
            get {
                return ResourceManager.GetString("ApiKeyKeep_InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hash of the API key is not valid.
        /// </summary>
        internal static string ApiKeyKeep_InvalidKeyHash {
            get {
                return ResourceManager.GetString("ApiKeyKeep_InvalidKeyHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No API key has been set for this user yet.
        /// </summary>
        internal static string ApiKeyKeep_NoApiKeyHash {
            get {
                return ResourceManager.GetString("ApiKeyKeep_NoApiKeyHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expiry date cannot be more than 30 days into the future.
        /// </summary>
        internal static string APIKeyRoot_ExpiresOnTooLate {
            get {
                return ResourceManager.GetString("APIKeyRoot_ExpiresOnTooLate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expiry date cannot be less than one hour into the future.
        /// </summary>
        internal static string APIKeyRoot_ExpiresOnTooSoon {
            get {
                return ResourceManager.GetString("APIKeyRoot_ExpiresOnTooSoon", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must be an owner of this API key to perform this action.
        /// </summary>
        internal static string ApiKeyRoot_NotOwner {
            get {
                return ResourceManager.GetString("ApiKeyRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The is no API key to verify yet.
        /// </summary>
        internal static string APIKeyRoot_Verify_NoApiKey {
            get {
                return ResourceManager.GetString("APIKeyRoot_Verify_NoApiKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This refresh token has expired.
        /// </summary>
        internal static string AuthTokensRoot_RefreshTokenExpired {
            get {
                return ResourceManager.GetString("AuthTokensRoot_RefreshTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This refresh token is unknown or for another user.
        /// </summary>
        internal static string AuthTokensRoot_RefreshTokenNotMatched {
            get {
                return ResourceManager.GetString("AuthTokensRoot_RefreshTokenNotMatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These tokens have already expired.
        /// </summary>
        internal static string AuthTokensRoot_TokensExpired {
            get {
                return ResourceManager.GetString("AuthTokensRoot_TokensExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This refresh token has been revoked.
        /// </summary>
        internal static string AuthTokensRoot_TokensRevoked {
            get {
                return ResourceManager.GetString("AuthTokensRoot_TokensRevoked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cooldown period is either zero or too large.
        /// </summary>
        internal static string LoginMonitor_InvalidCooldownPeriod {
            get {
                return ResourceManager.GetString("LoginMonitor_InvalidCooldownPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The max failed logins is either too large or negative.
        /// </summary>
        internal static string LoginMonitor_InvalidMaxFailedLogins {
            get {
                return ResourceManager.GetString("LoginMonitor_InvalidMaxFailedLogins", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New password cannot be the same as old password.
        /// </summary>
        internal static string PasswordCredentialsRoot_DuplicatePassword {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_DuplicatePassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The email is already in use by another user.
        /// </summary>
        internal static string PasswordCredentialsRoot_EmailNotUnique {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_EmailNotUnique", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is not valid.
        /// </summary>
        internal static string PasswordCredentialsRoot_InvalidPassword {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No password has yet been set for this user.
        /// </summary>
        internal static string PasswordCredentialsRoot_NoPassword {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_NoPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot initiate password reset before the user is registered.
        /// </summary>
        internal static string PasswordCredentialsRoot_PasswordInitiatedWithoutRegistration {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_PasswordInitiatedWithoutRegistration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset confirmation has expired.
        /// </summary>
        internal static string PasswordCredentialsRoot_PasswordResetTokenExpired {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_PasswordResetTokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration confirmation cannot be confirmed.
        /// </summary>
        internal static string PasswordCredentialsRoot_RegistrationNotVerifying {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_RegistrationNotVerifying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration has not been verified yet.
        /// </summary>
        internal static string PasswordCredentialsRoot_RegistrationUnverified {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_RegistrationUnverified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration is already verified.
        /// </summary>
        internal static string PasswordCredentialsRoot_RegistrationVerified {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_RegistrationVerified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user&apos;s registration confirmation window has expired.
        /// </summary>
        internal static string PasswordCredentialsRoot_RegistrationVerifyingExpired {
            get {
                return ResourceManager.GetString("PasswordCredentialsRoot_RegistrationVerifyingExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password is not valid.
        /// </summary>
        internal static string PasswordKeep_InvalidPassword {
            get {
                return ResourceManager.GetString("PasswordKeep_InvalidPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password hash is not valid.
        /// </summary>
        internal static string PasswordKeep_InvalidPasswordHash {
            get {
                return ResourceManager.GetString("PasswordKeep_InvalidPasswordHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset token is either missing or invalid.
        /// </summary>
        internal static string PasswordKeep_InvalidToken {
            get {
                return ResourceManager.GetString("PasswordKeep_InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No password has yet been set for this user.
        /// </summary>
        internal static string PasswordKeep_NoPasswordHash {
            get {
                return ResourceManager.GetString("PasswordKeep_NoPasswordHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset token has expired.
        /// </summary>
        internal static string PasswordKeep_TokenExpired {
            get {
                return ResourceManager.GetString("PasswordKeep_TokenExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password reset token is invalid.
        /// </summary>
        internal static string PasswordKeep_TokensNotMatch {
            get {
                return ResourceManager.GetString("PasswordKeep_TokensNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the user can update their own tokens.
        /// </summary>
        internal static string SSOUserRoot_NotOwner {
            get {
                return ResourceManager.GetString("SSOUserRoot_NotOwner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The verification token is either missing or invalid.
        /// </summary>
        internal static string VerificationKeep_InvalidToken {
            get {
                return ResourceManager.GetString("VerificationKeep_InvalidToken", resourceCulture);
            }
        }
    }
}
