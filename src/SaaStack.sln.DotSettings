<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=DE31F486_002DAE81_002D49C0_002DBA00_002D3A6A325B7C42_002Ff_003AAnalyzerReleases_002EShipped_002Emd/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/FilesAndFoldersToSkip2/=DE31F486_002DAE81_002D49C0_002DBA00_002D3A6A325B7C42_002Ff_003AAnalyzerReleases_002EUnshipped_002Emd/@EntryIndexedValue">ExplicitlyExcluded</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/GeneratedFilesAndFolders/=7AB39FD6_002D660F_002D4400_002D9955_002DB92684378492_002Fd_003AReference/@EntryIndexedValue">7AB39FD6-660F-4400-9955-B92684378492/d:Reference</s:String>
	<s:String x:Key="/Default/CodeInspection/ExcludedFiles/GeneratedFilesAndFolders/=DE31F486_002DAE81_002D49C0_002DBA00_002D3A6A325B7C42_002Fd_003AReference/@EntryIndexedValue">DE31F486-AE81-49C0-BA00-3A6A325B7C42/d:Reference</s:String>
	
	
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ArrangeNamespaceBody/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=ClassNeverInstantiated_002EGlobal/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=DuplicateResource/@EntryIndexedValue">DO_NOT_SHOW</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=SeparateLocalFunctionsWithJumpStatement/@EntryIndexedValue">WARNING</s:String>
	<s:String x:Key="/Default/CodeInspection/Highlighting/InspectionSeverities/=UnusedType_002EGlobal/@EntryIndexedValue">WARNING</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/Roslyn/RoslynEnabled/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOR/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_FOREACH/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_IFELSE/@EntryValue">Required</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpCodeStyle/BRACES_FOR_WHILE/@EntryValue">Required</s:String>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_AUTO_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_LOCAL_METHOD/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_PROPERTY/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_CODE/@EntryValue">1</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_BLANK_LINES_IN_DECLARATIONS/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/KEEP_USER_LINEBREAKS/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_TYPE_CONSTRAINTS_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_BINARY_OPSIGN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_CHAINED_METHOD_CALLS/@EntryValue">WRAP_IF_LONG</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_TERNARY_EXPR_STYLE/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpFileLayoutPatterns/Pattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;Patterns xmlns="urn:schemas-jetbrains-com:member-reordering-patterns"&gt;
    &lt;TypePattern DisplayName="Non-reorderable types"&gt;
        &lt;TypePattern.Match&gt;
            &lt;Or&gt;
                &lt;And&gt;
                    &lt;Kind Is="Interface" /&gt;
                    &lt;Or&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.InterfaceTypeAttribute" /&gt;
                        &lt;HasAttribute Name="System.Runtime.InteropServices.ComImport" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
                &lt;Kind Is="Struct" /&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorderAttribute" /&gt;
                &lt;HasAttribute Name="JetBrains.Annotations.NoReorder" /&gt;
            &lt;/Or&gt;
        &lt;/TypePattern.Match&gt;
    &lt;/TypePattern&gt;
    
    &lt;TypePattern DisplayName="xUnit.net Test Classes" RemoveRegions="All"&gt;
        &lt;TypePattern.Match&gt;
            &lt;And&gt;
                &lt;Kind Is="Class" /&gt;
                &lt;HasMember&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
                    &lt;/And&gt;
                &lt;/HasMember&gt;
            &lt;/And&gt;
        &lt;/TypePattern.Match&gt;
        &lt;Entry DisplayName="Static Fields and Constants"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constant" /&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Field" /&gt;
                        &lt;Static /&gt;
                    &lt;/And&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Kind Order="Constant Field" /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Field" /&gt;
                    &lt;Not&gt;
                        &lt;Static /&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Setup/Teardown Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constructor" /&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Method" /&gt;
                        &lt;ImplementsInterface Name="System.IDisposable" /&gt;
                    &lt;/And&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Kind Order="Constructor" /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Destructors"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Destructor" /&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry Priority="200" DisplayName="Dispose Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Name Is="Dispose"/&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry Priority="100" DisplayName="Test Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;HasAttribute Name="Xunit.FactAttribute" Inherited="True" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Any other members" /&gt;
    &lt;/TypePattern&gt;

    &lt;TypePattern DisplayName="Normal Code"&gt;
        &lt;Entry Priority="100" DisplayName="Public Delegates"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Access Is="Public" /&gt;
                    &lt;Kind Is="Delegate" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access/&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry Priority="100" DisplayName="Public Enums"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Access Is="Public" /&gt;
                    &lt;Kind Is="Enum" /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Static Fields and Constants"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Constant" /&gt;
                    &lt;And&gt;
                        &lt;Kind Is="Field" /&gt;
                        &lt;Static /&gt;
                    &lt;/And&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Kind Order="Constant Field" /&gt;
                &lt;Access/&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Fields"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Field" /&gt;
                    &lt;Not&gt;
                        &lt;Static /&gt;
                    &lt;/Not&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access/&gt;
                &lt;Readonly /&gt;
                &lt;Name /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Construction Factories"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Access Is="Public" /&gt;
                    &lt;Static/&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Name Is="Create"/&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Static/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Constructors"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Constructor" /&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Static /&gt;
                &lt;Access Order="Public Internal Protectedinternal Protected Private"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Destructors"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Destructor" /&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry Priority="200"  DisplayName="Dispose Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Name Is="Dispose"/&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Access Order="Public Internal ProtectedInternal Protected Private"/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Properties, Indexers"&gt;
            &lt;Entry.Match&gt;
                &lt;Or&gt;
                    &lt;Kind Is="Property" /&gt;
                    &lt;Kind Is="Indexer" /&gt;
                &lt;/Or&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="DDD Persistence Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                       &lt;Name Is="Dehydrate"/&gt;
                       &lt;Name Is="Rehydrate"/&gt;
                        &lt;Name Is="GetAtomicValues"/&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="DDD Aggregate Root Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;Name Is="OnStateChanged"/&gt;
                        &lt;Name Is="EnsureInvariants"/&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
        &lt;Entry Priority="100" DisplayName="Interface Implementations"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Member" /&gt;
                    &lt;ImplementsInterface /&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;ImplementsInterface Immediate="True" /&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Public Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;Access Is="Public" /&gt;
                        &lt;Access Is="Internal" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Protected Methods"&gt;
            &lt;Entry.Match&gt;
                &lt;And&gt;
                    &lt;Kind Is="Method" /&gt;
                    &lt;Or&gt;
                        &lt;Access Is="Protected" /&gt;
                        &lt;Access Is="ProtectedInternal" /&gt;
                    &lt;/Or&gt;
                &lt;/And&gt;
            &lt;/Entry.Match&gt;
            &lt;Entry.SortBy&gt;
                &lt;Name/&gt;
            &lt;/Entry.SortBy&gt;
        &lt;/Entry&gt;
        &lt;Entry DisplayName="Any other members" /&gt;
        &lt;Entry DisplayName="Nested Types"&gt;
            &lt;Entry.Match&gt;
                &lt;Kind Is="Type" /&gt;
            &lt;/Entry.Match&gt;
        &lt;/Entry&gt;
    &lt;/TypePattern&gt;
&lt;/Patterns&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=LocalFunctions/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb"&gt;&lt;ExtraRule Prefix="Configure" Suffix="" Style="AaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=Method/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="When" Suffix="" Style="AaBb_AaBb"&gt;&lt;ExtraRule Prefix="" Suffix="" Style="AaBb" /&gt;&lt;ExtraRule Prefix="Setup" Suffix="" Style="AaBb" /&gt;&lt;ExtraRule Prefix="Configure" Suffix="" Style="AaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/Filtering/FileMasksToExclude/=src_002FApplication_002EInterfaces_002FResources_002F_002A_002E_002A/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/Filtering/FileMasksToExclude/=src_002FCommon_002FAnnotations_002Ecs/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/Filtering/HideAutoProperties/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpKeepExistingMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpPlaceEmbeddedOnSameLineMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ECSharpUseContinuousIndentInsideBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Description/@EntryValue">A DDD entity</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Field/=filename/@KeyIndexDefined">False</s:Boolean>
	
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Field/=name/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Field/=name/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Field/=propertyname/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Field/=propertyname/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Shortcut/@EntryValue">entity</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=0C41D02830B426419B2E0D9AF25191F6/Text/@EntryValue">using Common;
using Domain.Common;
using Domain.Common.Entities;
using Domain.Common.Identity;
using Domain.Common.ValueObjects;
using Domain.Interfaces.Entities;
using Domain.Interfaces.Services;
using QueryAny;

// TODO: delete this attribute if your root aggregate is using event sourcing, instead of snapshotting 
[EntityName("$name$")]
public sealed class $name$Entity : EntityBase
{
    public static Result&lt;$name$Entity, Error&gt; Create(IRecorder recorder, IIdentifierFactory idFactory,
        RootEventHandler rootEventHandler)
    {
        return new $name$Entity(recorder, idFactory, rootEventHandler);
    }

    private $name$Entity(IRecorder recorder, IIdentifierFactory idFactory,
        RootEventHandler rootEventHandler) : base(recorder, idFactory, rootEventHandler)
    {
    }

    // TODO: delete this constructor if your root aggregate is using event sourcing, instead of snapshotting 
    private $name$Entity(IDependencyContainer container, IReadOnlyDictionary&lt;string, object?&gt; rehydratingProperties, Identifier identifier) : base(identifier, container, rehydratingProperties)
    {
        RootId = rehydratingProperties.GetValueOrDefault&lt;Identifier&gt;(nameof(RootId))!;
        OrganizationId = rehydratingProperties.GetValueOrDefault&lt;Identifier&gt;(nameof(OrganizationId))!;
        $propertyname$ = rehydratingProperties.GetValueOrDefault&lt;string&gt;(nameof($propertyname$));
    }

    // TODO: delete this method if your root aggregate is using event sourcing, instead of snapshotting 
    public static EntityFactory&lt;$name$Entity&gt; Rehydrate()
    {
        return (identifier, container, properties) =&gt; new $name$Entity(container, properties, identifier);
    }

    // TODO: delete this method if you are using event sourcing, instead of snapshotting 
    public override Dictionary&lt;string, object?&gt; Dehydrate()
    {
        var properties = base.Dehydrate();
        properties.Add(nameof(RootId), RootId);
        properties.Add(nameof(OrganizationId), OrganizationId);
        properties.Add(nameof($propertyname$), $propertyname$);
        return properties;
    }

    protected override Result&lt;Error&gt; OnStateChanged(IDomainEvent @event)
    {
        switch (@event)
        {
            case $name$Added added:
            {
                RootId = added.RootId.ToId();
                OrganizationId = added.OrganizationId.ToId();
                return Result.Ok;
            }

            default:
                return HandleUnKnownStateChangedEvent(@event);
        }
    }

    public override Result&lt;Error&gt; EnsureInvariants()
    {
        var ensureInvariants = base.EnsureInvariants();
        if (!ensureInvariants.IsSuccessful)
        {
            return ensureInvariants.Error;
        }
        
        //TODO: add your other invariant rules here

        return Result.Ok;
    }

    public Identifier? OrganizationId { get; private set; }

    public Identifier? RootId { get; private set; }
    
    public string? $propertyname$ { get; private set; }
}$END$$SELECTION$</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Description/@EntryValue">A DDD value object with a single value</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Field/=datatype/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Field/=datatype/Expression/@EntryValue">constant("string")</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Field/=datatype/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Field/=name/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Field/=name/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Shortcut/@EntryValue">valueobjectsingle</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=170E7AF6269E004AA22A3DC764E9AED2/Text/@EntryValue">using Common;
using Common.Extensions;
using Domain.Common;
using Domain.Common.ValueObjects;

public sealed class $name$ : SingleValueObjectBase&lt;$name$, $datatype$&gt;
{
    public static Result&lt;$name$, Error&gt; Create($datatype$ value)
    {
        if (value.IsNotValuedParameter(nameof(value), out var error))
        {
            return error;
        }

        return new $name$(value);
    }

    private $name$($datatype$ value) : base(value)
    {
    }

    public static ValueObjectFactory&lt;$name$&gt; Rehydrate()
    {
        return (property, _) =&gt;
        {
            var parts = RehydrateToList(property, true);
            return new $name$(parts[0]);
        };
    }
}$END$$SELECTION$</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Description/@EntryValue">A DDD value object with multiple values</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=datatype/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=datatype/Expression/@EntryValue">constant("string")</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=datatype/Order/@EntryValue">4</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=name/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=name/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param1/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param1/Expression/@EntryValue">capitalize(value1)</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param1/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param1/Order/@EntryValue">5</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param2/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param2/Expression/@EntryValue">capitalize(value2)</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param2/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param2/Order/@EntryValue">6</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param3/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param3/Expression/@EntryValue">capitalize(value3)</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param3/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=param3/Order/@EntryValue">7</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=value1/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=value1/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=value2/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=value2/Order/@EntryValue">2</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=value3/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Field/=value3/Order/@EntryValue">3</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Shortcut/@EntryValue">valueobjectmultiple</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=24BF978A3E745B4C95751624A71E837E/Text/@EntryValue">using Common;
using Common.Extensions;
using Domain.Common;
using Domain.Common.ValueObjects;

public sealed class $name$ : ValueObjectBase&lt;$name$&gt;
{
    public static Result&lt;$name$, Error&gt; Create($datatype$ $value1$, $datatype$ $value2$, $datatype$ $value3$)
    {
        if ($value1$.IsNotValuedParameter(nameof($value1$), out var error1))
        {
            return error1;
        }
        if ($value2$.IsNotValuedParameter(nameof($value2$), out var error2))
        {
            return error2;
        }
        if ($value3$.IsNotValuedParameter(nameof($value3$), out var error3))
        {
            return error3;
        }

        return new $name$($value1$, $value2$, $value3$);
    }

    private $name$($datatype$ $value1$, $datatype$ $value2$, $datatype$ $value3$)
    {
        $param1$ = $value1$;
        $param2$ = $value2$;
        $param3$ = $value3$;
    }

    public static ValueObjectFactory&lt;$name$&gt; Rehydrate()
    {
        return (property, container) =&gt;
        {
            var parts = RehydrateToList(property, false);
            return new $name$(parts[0], parts[1], parts[2]);
        };
    }

    protected override IEnumerable&lt;object?&gt; GetAtomicValues()
    {
        return new object[] { $param1$, $param2$, $param3$ };
    }

    public $datatype$ $param1$ { get; }

    public $datatype$ $param2$ { get; }

    public $datatype$ $param3$ { get; }
}$END$$SELECTION$</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Description/@EntryValue">A new test class (xUnit)</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=classname/@KeyIndexDefined">False</s:Boolean>
	
	
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=condition/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=condition/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=filename/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=filename/Expression/@EntryValue">getAlphaNumericFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=filename/Order/@EntryValue">0</s:Int64>
	
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=outcome/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Field/=outcome/Order/@EntryValue">2</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Shortcut/@EntryValue">testc</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=8FB3F797BFF2494782573E000FC45CD9/Text/@EntryValue">[Trait("Category", "Unit")]
public class $filename$
{
    public $filename$()
    {
    }

    [Fact]
    public void When$condition$_Then$outcome$()
    {
        $END$
    }
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Description/@EntryValue">Test Method Async (xUnit)</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Field/=condition/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Field/=condition/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Field/=outcome/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Field/=outcome/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Shortcut/@EntryValue">testma</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=916253215A205544853D70076D82D47E/Text/@EntryValue">[Fact]
public async Task When$condition$_Then$outcome$()
{
    $END$
}</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Applicability/=Surround/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/IsBlessed/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Scope/=4B847A5ED8F7574F925C66209222DF71/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Scope/=4B847A5ED8F7574F925C66209222DF71/Type/@EntryValue">AtLineStart</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Scope/=74A278E9BF386142B53D57114609A033/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Scope/=74A278E9BF386142B53D57114609A033/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Scope/=74A278E9BF386142B53D57114609A033/Type/@EntryValue">InCSharpExceptStringLiterals</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">False</s:Boolean>
	
	
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Shortcut/@EntryValue">TESTINGONLY</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=C46EC722B20A634ABBA30FAB3673BECF/Text/@EntryValue">#if TESTINGONLY
     $SELECTION$$END$ 
  #endif</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Description/@EntryValue">A DDD root aggregate</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=name/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=name/InitialRange/@EntryValue">0</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=name/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=propertyname/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=propertyname/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=propertynamevar/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=propertynamevar/Expression/@EntryValue">decapitalize(propertyname)</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=propertynamevar/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Field/=propertynamevar/Order/@EntryValue">2</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Shortcut/@EntryValue">aggregate</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=D3A5BB394F1F30409407264EA0161946/Text/@EntryValue">using Common;
using Domain.Common;
using Domain.Common.Entities;
using Domain.Common.Identity;
using Domain.Common.ValueObjects;
using Domain.Interfaces.Entities;
using Domain.Interfaces.Services;
using QueryAny;

// TODO: delete this attribute if your root aggregate is using event sourcing, instead of snapshotting 
[EntityName("$name$")]
public sealed class $name$Root : AggregateRootBase
{
    public static Result&lt;$name$Root, Error&gt; Create(IRecorder recorder, IIdentifierFactory idFactory, Identifier organizationId)
    {
        var root = new $name$Root(recorder, idFactory);
        root.RaiseCreateEvent($name$.Created.Create(root.Id, organizationId));
        return root;
    }

    private $name$Root(IRecorder recorder, IIdentifierFactory idFactory) : base(recorder, idFactory)
    {
    }
    
    // TODO: delete this constructor if your root aggregate is using snapshotting, instead of event sourcing 
    private CarRoot(IRecorder recorder, IIdentifierFactory idFactory, Identifier identifier) : base(recorder, idFactory, identifier)
    {
    }

    // TODO: delete this constructor if your root aggregate is using event sourcing, instead of snapshotting 
    private $name$Root(Identifier identifier, IDependencyContainer container,
        IReadOnlyDictionary&lt;string, object?&gt; rehydratingProperties) : base(
        identifier, container, rehydratingProperties)
    {
        $propertyname$ = rehydratingProperties.GetValueOrDefault&lt;Name&gt;(nameof($propertyname$));
        OrganizationId = rehydratingProperties.GetValueOrDefault&lt;Identifier&gt;(nameof(OrganizationId))!;
    }

    // TODO: delete this method if your root aggregate is using event sourcing, instead of snapshotting 
    public override Dictionary&lt;string, object?&gt; Dehydrate()
    {
        var properties = base.Dehydrate();
        properties.Add(nameof($propertyname$), $propertyname$);
        properties.Add(nameof(OrganizationId), OrganizationId);
        return properties;
    }

    // TODO: delete this method if your root aggregate is using event sourcing, instead of snapshotting 
    public static AggregateRootFactory&lt;$name$Root&gt; Rehydrate()
    {
        return (identifier, container, properties) =&gt; new $name$Root(identifier, container, properties);
    }
    // TODO: delete this method if your root aggregate is using snapshotting, instead of event sourcing 
    public static AggregateRootFactory&lt;$name$Root&gt; Rehydrate()
    {
        return (identifier, container, properties) =&gt; new $name$Root(container.Resolve&lt;IRecorder&gt;(),
            container.Resolve&lt;IIdentifierFactory&gt;(), identifier);
    }

    public override Result&lt;Error&gt; EnsureInvariants()
    {
        var ensureInvariants = base.EnsureInvariants();
        if (!ensureInvariants.IsSuccessful)
        {
            return ensureInvariants.Error;
        }

        //TODO: add your other invariant rules here

        return Result.Ok;
    }

    protected override Result&lt;Error&gt; OnStateChanged(IDomainEvent @event, bool isReconstituting)
    {
        switch (@event)
        {
            case $name$.Created created:
            {
                OrganizationId = created.OrganizationId.ToId();
                return Result.Ok;
            }

            case $name$.SomethingChanged changed:
            {
                var $propertynamevar$ = Name.Create(changed.$propertyname$);
                if (!$propertynamevar$.IsSuccessful)
                {
                    return $propertynamevar$.Error;
                }
                $propertyname$ = $propertynamevar$.Value;
                Recorder.TraceDebug(null, "$name$ {Id} has changed", Id);
                return Result.Ok;
            }

            default:
                return HandleUnKnownStateChangedEvent(@event);
        }
    }

    public Name? $propertyname$ { get; private set; }

    public Identifier OrganizationId { get; private set; } = Identifier.Empty();
}$END$$SELECTION$</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Applicability/=Live/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Description/@EntryValue">Test Method (xUnit)</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Field/=condition/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Field/=condition/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Field/=outcome/@KeyIndexDefined">True</s:Boolean>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Field/=outcome/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Scope/=C3001E7C0DA78E4487072B7E050D86C5/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Scope/=C3001E7C0DA78E4487072B7E050D86C5/CustomProperties/=minimumLanguageVersion/@EntryIndexedValue">2.0</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Scope/=C3001E7C0DA78E4487072B7E050D86C5/Type/@EntryValue">InCSharpFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Shortcut/@EntryValue">testm</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/ShortenQualifiedReferences/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=FB91EB49F0C92544901777E29C183C25/Text/@EntryValue">[Fact]
public void When$condition$_Then$outcome$()
{
    $END$
}</s:String>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=abookingid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aborrowerid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=abxy/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=acallerid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=acallid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=acarid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=achangedvalue/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=acorrelationid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=adatetimeproperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=adifferentvalue/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=adisplaystring/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=afilter/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=afilterfield/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ajurisdiction/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=akey/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=alocation/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=amake/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=amanagerid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=amessage/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=amodel/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aname/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anamespace/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Anding/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anend/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anentityid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anentitytype/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anerror/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aneventid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aneventname/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aneventtype/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aninvalidplate/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aninvalidreference/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anorganizationid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anotherproperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anotherresource/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anotherunknowntype/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anothervalue/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anownerid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anumberproperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anunavailbilityid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anunknownjurisdiction/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=anunknowntype/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aparametername/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=apath/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=apattern/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aplate/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=appsettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aproperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=apropertyvalue/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=areason/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=areference/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=areferenceid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=areplacement/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=arequestid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aresource/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aresourceref/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=arootid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aroute/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=aserviceclass/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=asort/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=asortfield/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=astart/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=astatus/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=astringproperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=astringvalue/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=atenantid/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=atesterror/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=atestresource/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=atitle/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=atype/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=avalue/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Camelcased/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=ctors/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=decryptor/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Dehydratable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=el_0022_002C_0020Y/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Equals_0028_0022adif/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=FFFFFFFK/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Hydratable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Mediat/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Mixedcase/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=notadate/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=notajurisdiction/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=notreserved/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Persistable/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=putpatch/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=stringified/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Syntaxes/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=tenantsettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=testresource/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=tooshort/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=unavail/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Unavailabilities/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=Underlapped/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=_0020_0020_0020_0020_0020_0020/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=_0020_0022areferen/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=_0022anunknowntyp/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/UserDictionary/Words/=_0022astringvalu/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>