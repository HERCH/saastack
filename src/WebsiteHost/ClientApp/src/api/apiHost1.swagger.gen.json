{
  "openapi": "3.0.1",
  "info": {
    "title": "BackendWithAncillaryAPI",
    "description": "BackendWithAncillaryAPI",
    "version": "v1"
  },
  "paths": {
    "/apikeys/me": {
      "post": {
        "tags": [
          "APIKeysApi"
        ],
        "summary": "Create a new API key for the authenticated user",
        "description": "(request type: CreateAPIKeyForCallerRequest)",
        "operationId": "CreateAPIKeyForCaller",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAPIKeyForCallerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAPIKeyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAPIKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "APIKeysApi"
        ],
        "summary": "Lists all the API keys for the authenticated user",
        "description": "(request type: SearchAllAPIKeysForCallerRequest)",
        "operationId": "SearchAllAPIKeysForCaller",
        "parameters": [
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllAPIKeysResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllAPIKeysResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/apikeys/{Id}": {
      "delete": {
        "tags": [
          "APIKeysApi"
        ],
        "summary": "Deletes the API key",
        "description": "(request type: DeleteAPIKeyRequest)",
        "operationId": "DeleteAPIKey",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/audits/deliver": {
      "post": {
        "tags": [
          "AuditsApi"
        ],
        "summary": "Delivers an audit message",
        "description": "(request type: DeliverAuditRequest)",
        "operationId": "DeliverAudit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliverAuditRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/audits/drain": {
      "post": {
        "tags": [
          "AuditsApi"
        ],
        "summary": "Drains all the pending audit messages",
        "description": "(request type: DrainAllAuditsRequest)",
        "operationId": "DrainAllAudits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrainAllAuditsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/audits": {
      "get": {
        "tags": [
          "AuditsApi"
        ],
        "summary": "Lists all available audits",
        "description": "(request type: SearchAllAuditsRequest)",
        "operationId": "SearchAllAudits",
        "parameters": [
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllAuditsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllAuditsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens/refresh": {
      "post": {
        "tags": [
          "AuthTokensApi"
        ],
        "summary": "Refreshes the access_token for the specified refresh_token",
        "description": "(request type: RefreshTokenRequest)",
        "operationId": "RefreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tokens/{RefreshToken}": {
      "delete": {
        "tags": [
          "AuthTokensApi"
        ],
        "summary": "Revoke a valid refresh_token",
        "description": "(request type: RevokeRefreshTokenRequest)",
        "operationId": "RevokeRefreshToken",
        "parameters": [
          {
            "name": "RefreshToken",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/export": {
      "get": {
        "tags": [
          "BillingProviderMigrationApi"
        ],
        "summary": "Exports all the subscriptions created by the currently installed Billing Provider, that will need to be migrated by the next Billing Provider",
        "description": "(request type: ExportSubscriptionsToMigrateRequest)",
        "operationId": "ExportSubscriptionsToMigrate",
        "parameters": [
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportSubscriptionsToMigrateResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExportSubscriptionsToMigrateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/subscriptions/{Id}/migrate": {
      "put": {
        "tags": [
          "BillingProviderMigrationApi"
        ],
        "summary": "Migrates an existing subscription from the previously installed Billing Provider to the currently installed Billing Provider",
        "description": "(request type: MigrateSubscriptionRequest)",
        "operationId": "MigrateSubscription (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "BillingProviderMigrationApi"
        ],
        "summary": "Migrates an existing subscription from the previously installed Billing Provider to the currently installed Billing Provider",
        "description": "(request type: MigrateSubscriptionRequest)",
        "operationId": "MigrateSubscription (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MigrateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MigrateSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/bookings/{Id}": {
      "delete": {
        "tags": [
          "BookingsApi"
        ],
        "summary": "Cancels a booking",
        "description": "(request type: CancelBookingRequest)",
        "operationId": "CancelBooking",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/bookings": {
      "post": {
        "tags": [
          "BookingsApi"
        ],
        "summary": "Makes a new booking for a specific car",
        "description": "(request type: MakeBookingRequest)",
        "operationId": "MakeBooking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MakeBookingRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MakeBookingResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MakeBookingResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "BookingsApi"
        ],
        "summary": "Lists all the bookings for all cars",
        "description": "(request type: SearchAllBookingsRequest)",
        "operationId": "SearchAllBookings",
        "parameters": [
          {
            "name": "FromUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllBookingsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllBookingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/cars/{Id}": {
      "delete": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Deletes the specified car",
        "description": "(request type: DeleteCarRequest)",
        "operationId": "DeleteCar",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Fetches the specified car",
        "description": "(request type: GetCarRequest)",
        "operationId": "GetCar",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/cars": {
      "post": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Registers a new car",
        "description": "(request type: RegisterCarRequest)",
        "operationId": "RegisterCar",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterCarRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Lists all the cars",
        "description": "(request type: SearchAllCarsRequest)",
        "operationId": "SearchAllCars",
        "parameters": [
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllCarsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllCarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/cars/{Id}/maintain": {
      "put": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Schedules the car for maintenance for the specified period",
        "description": "(request type: ScheduleMaintenanceCarRequest)",
        "operationId": "ScheduleMaintenanceCar (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleMaintenanceCarRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Schedules the car for maintenance for the specified period",
        "description": "(request type: ScheduleMaintenanceCarRequest)",
        "operationId": "ScheduleMaintenanceCar (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleMaintenanceCarRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/cars/available": {
      "get": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Lists all the available cars for the specified period",
        "description": "(request type: SearchAllAvailableCarsRequest)",
        "operationId": "SearchAllAvailableCars",
        "parameters": [
          {
            "name": "FromUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllCarsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllCarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/cars/{Id}/unavailabilities": {
      "get": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Lists all the periods for when the specified car is unavailable",
        "description": "(request type: SearchAllCarUnavailabilitiesRequest)",
        "operationId": "SearchAllCarUnavailabilities",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OrganizationId",
            "in": "query",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllCarUnavailabilitiesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllCarUnavailabilitiesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cars/{Id}/offline": {
      "put": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Reserves the car to go offline for the specified period",
        "description": "(request type: TakeOfflineCarRequest)",
        "operationId": "TakeOfflineCar (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TakeOfflineCarRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "CarsApi"
        ],
        "summary": "Reserves the car to go offline for the specified period",
        "description": "(request type: TakeOfflineCarRequest)",
        "operationId": "TakeOfflineCar (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TakeOfflineCarRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/domain_events/drain": {
      "post": {
        "tags": [
          "DomainEventsApi"
        ],
        "summary": "Drains all the pending domain_event messages",
        "description": "(request type: DrainAllDomainEventsRequest)",
        "operationId": "DrainAllDomainEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrainAllDomainEventsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/domain_events/notify": {
      "post": {
        "tags": [
          "DomainEventsApi"
        ],
        "summary": "Notifies when a domain_event has been raised",
        "description": "(request type: NotifyDomainEventRequest)",
        "operationId": "NotifyDomainEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyDomainEventRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/domain_events": {
      "get": {
        "tags": [
          "DomainEventsApi"
        ],
        "summary": "Lists all delivered domain_events",
        "description": "(request type: SearchAllDomainEventsRequest)",
        "operationId": "SearchAllDomainEvents",
        "parameters": [
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllDomainEventsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchAllDomainEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emails/delivered": {
      "post": {
        "tags": [
          "EmailsApi"
        ],
        "summary": "Confirms the delivery of a sent email message",
        "description": "(request type: ConfirmEmailDeliveredRequest)",
        "operationId": "ConfirmEmailDelivered",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmEmailDeliveredRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emails/failed": {
      "post": {
        "tags": [
          "EmailsApi"
        ],
        "summary": "Confirms the failed delivery of a sent email message",
        "description": "(request type: ConfirmEmailDeliveryFailedRequest)",
        "operationId": "ConfirmEmailDeliveryFailed",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmEmailDeliveryFailedRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emails/drain": {
      "post": {
        "tags": [
          "EmailsApi"
        ],
        "summary": "Drains all the pending email messages",
        "description": "(request type: DrainAllEmailsRequest)",
        "operationId": "DrainAllEmails",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrainAllEmailsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/emails": {
      "get": {
        "tags": [
          "EmailsApi"
        ],
        "summary": "Lists all email deliveries since the specified date",
        "description": "(request type: SearchEmailDeliveriesRequest)",
        "operationId": "SearchEmailDeliveries",
        "parameters": [
          {
            "name": "SinceUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchEmailDeliveriesResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchEmailDeliveriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/emails/send": {
      "post": {
        "tags": [
          "EmailsApi"
        ],
        "summary": "Sends an email message for delivery",
        "description": "(request type: SendEmailRequest)",
        "operationId": "SendEmail",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendEmailRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/users/{Id}/roles": {
      "post": {
        "tags": [
          "EndUsersApi"
        ],
        "summary": "Assigns the specified roles to the specified user",
        "description": "(request type: AssignPlatformRolesRequest)",
        "operationId": "AssignPlatformRoles",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignPlatformRolesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "EndUsersApi"
        ],
        "summary": "Removes the specified roles from the specified user",
        "description": "(request type: UnassignPlatformRolesRequest)",
        "operationId": "UnassignPlatformRoles (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignPlatformRolesRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "EndUsersApi"
        ],
        "summary": "Removes the specified roles from the specified user",
        "description": "(request type: UnassignPlatformRolesRequest)",
        "operationId": "UnassignPlatformRoles (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignPlatformRolesRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/users/{Id}": {
      "get": {
        "tags": [
          "EndUsersApi"
        ],
        "summary": "Fetches the specified user",
        "description": "(request type: GetUserRequest)",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/flags/{UserId}/{Name}": {
      "get": {
        "tags": [
          "FeatureFlagsApi"
        ],
        "summary": "Fetches the named feature flag, for all users, or for a specific user, and optionally for a specific tenancy",
        "description": "(request type: GetFeatureFlagRequest)",
        "operationId": "GetFeatureFlag",
        "parameters": [
          {
            "name": "Name",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TenantId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureFlagResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureFlagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/flags": {
      "get": {
        "tags": [
          "FeatureFlagsApi"
        ],
        "summary": "Lists all the available feature flags",
        "description": "(request type: GetAllFeatureFlagsRequest)",
        "operationId": "GetAllFeatureFlags",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFeatureFlagsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllFeatureFlagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/flags/{Name}": {
      "get": {
        "tags": [
          "FeatureFlagsApi"
        ],
        "summary": "Fetches the named feature flag for the current authenticated user",
        "description": "(request type: GetFeatureFlagForCallerRequest)",
        "operationId": "GetFeatureFlagForCaller",
        "parameters": [
          {
            "name": "Name",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureFlagResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetFeatureFlagResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "HealthApi"
        ],
        "summary": "Displays the health of the API",
        "description": "(request type: HealthCheckRequest)",
        "operationId": "HealthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheckResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/images/{Id}": {
      "delete": {
        "tags": [
          "ImagesApi"
        ],
        "summary": "Deletes the image",
        "description": "(request type: DeleteImageRequest)",
        "operationId": "DeleteImage",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "ImagesApi"
        ],
        "summary": "Fetches the details about the image",
        "description": "(request type: GetImageRequest)",
        "operationId": "GetImage",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetImageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "ImagesApi"
        ],
        "summary": "Changes the image details",
        "description": "(request type: UpdateImageRequest)",
        "operationId": "UpdateImage (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImageRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateImageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateImageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ImagesApi"
        ],
        "summary": "Changes the image details",
        "description": "(request type: UpdateImageRequest)",
        "operationId": "UpdateImage (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateImageRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateImageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateImageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/images/{Id}/download": {
      "get": {
        "tags": [
          "ImagesApi"
        ],
        "summary": "Downloads the raw image",
        "description": "(request type: DownloadImageRequest)",
        "operationId": "DownloadImage",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/gif": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/jpeg": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/images": {
      "post": {
        "tags": [
          "ImagesApi"
        ],
        "summary": "Uploads a new image. Can be one of the following types: jpg, jpeg, png, gif",
        "description": "(request type: UploadImageRequest)",
        "operationId": "UploadImage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "description": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/invitations": {
      "post": {
        "tags": [
          "InvitationsApi"
        ],
        "summary": "Invites the specified person (via email address) to the platform",
        "description": "(request type: InviteGuestRequest)",
        "operationId": "InviteGuest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteGuestRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteGuestResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InviteGuestResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/invitations/{Token}/resend": {
      "post": {
        "tags": [
          "InvitationsApi"
        ],
        "summary": "Resends the invitation to the specified person to the platform",
        "description": "(request type: ResendGuestInvitationRequest)",
        "operationId": "ResendGuestInvitation",
        "parameters": [
          {
            "name": "Token",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendGuestInvitationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/invitations/{Token}/verify": {
      "get": {
        "tags": [
          "InvitationsApi"
        ],
        "summary": "Verifies that the guest invitation is still valid",
        "description": "(request type: VerifyGuestInvitationRequest)",
        "operationId": "VerifyGuestInvitation",
        "parameters": [
          {
            "name": "Token",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyGuestInvitationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyGuestInvitationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/machines/register": {
      "post": {
        "tags": [
          "MachineCredentialsApi"
        ],
        "summary": "Register a new machine user on the platform",
        "description": "(request type: RegisterMachineRequest)",
        "operationId": "RegisterMachine",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterMachineRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterMachineResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterMachineResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/mailgun": {
      "post": {
        "tags": [
          "MailgunApi"
        ],
        "summary": "Notifies a Mailgun event, via a webhook",
        "description": "(request type: MailgunNotifyWebhookEventRequest)",
        "operationId": "MailgunNotifyWebhookEvent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MailgunNotifyWebhookEventRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/memberships/me/default": {
      "put": {
        "tags": [
          "MembershipsApi"
        ],
        "summary": "Changes the default organization for the authenticated user",
        "description": "(request type: ChangeDefaultOrganizationRequest)",
        "operationId": "ChangeDefaultOrganization (Put)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDefaultOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "MembershipsApi"
        ],
        "summary": "Changes the default organization for the authenticated user",
        "description": "(request type: ChangeDefaultOrganizationRequest)",
        "operationId": "ChangeDefaultOrganization (Patch)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeDefaultOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/memberships/me": {
      "get": {
        "tags": [
          "MembershipsApi"
        ],
        "summary": "List the memberships for the authenticated user",
        "description": "(request type: ListMembershipsForCallerRequest)",
        "operationId": "ListMembershipsForCaller",
        "parameters": [
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembershipsForCallerResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembershipsForCallerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}/roles/assign": {
      "put": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Assigns a list of roles to a member of an organization",
        "description": "(request type: AssignRolesToOrganizationRequest)",
        "operationId": "AssignRolesToOrganization (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRolesToOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Assigns a list of roles to a member of an organization",
        "description": "(request type: AssignRolesToOrganizationRequest)",
        "operationId": "AssignRolesToOrganization (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRolesToOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}/avatar": {
      "put": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Uploads a new avatar for the organization",
        "description": "(request type: ChangeOrganizationAvatarRequest)",
        "operationId": "ChangeOrganizationAvatar (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Uploads a new avatar for the organization",
        "description": "(request type: ChangeOrganizationAvatarRequest)",
        "operationId": "ChangeOrganizationAvatar (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Removes the avatar of the organization",
        "description": "(request type: DeleteOrganizationAvatarRequest)",
        "operationId": "DeleteOrganizationAvatar",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}": {
      "put": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Changes the profile of the organization",
        "description": "(request type: ChangeOrganizationRequest)",
        "operationId": "ChangeOrganization (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Changes the profile of the organization",
        "description": "(request type: ChangeOrganizationRequest)",
        "operationId": "ChangeOrganization (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Deletes the organization",
        "description": "(request type: DeleteOrganizationRequest)",
        "operationId": "DeleteOrganization",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Fetches the profile of the organization",
        "description": "(request type: GetOrganizationRequest)",
        "operationId": "GetOrganization",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations": {
      "post": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Creates a new organization to share with other users",
        "description": "(request type: CreateOrganizationRequest)",
        "operationId": "CreateOrganization",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}/settings": {
      "get": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Fetches the settings for an organization",
        "description": "(request type: GetOrganizationSettingsRequest)",
        "operationId": "GetOrganizationSettings",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationSettingsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationSettingsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}/members": {
      "post": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Invites a new member to the organization, either by email address, or by their user ID (if known)",
        "description": "(request type: InviteMemberToOrganizationRequest)",
        "operationId": "InviteMemberToOrganization",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteMemberToOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteMemberToOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InviteMemberToOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Fetches all the members of the organization",
        "description": "(request type: ListMembersForOrganizationRequest)",
        "operationId": "ListMembersForOrganization",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembersForOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListMembersForOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}/roles/unassign": {
      "put": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Unassigns the list of roles from a member of an organization",
        "description": "(request type: UnassignRolesFromOrganizationRequest)",
        "operationId": "UnassignRolesFromOrganization (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignRolesFromOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Unassigns the list of roles from a member of an organization",
        "description": "(request type: UnassignRolesFromOrganizationRequest)",
        "operationId": "UnassignRolesFromOrganization (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnassignRolesFromOrganizationRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/organizations/{Id}/members/{UserId}": {
      "delete": {
        "tags": [
          "OrganizationsApi"
        ],
        "summary": "Removes a previously invited member from the organization",
        "description": "(request type: UnInviteMemberFromOrganizationRequest)",
        "operationId": "UnInviteMemberFromOrganization",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnInviteMemberFromOrganizationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UnInviteMemberFromOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/passwords/auth": {
      "post": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Authenticates a user with a username and password",
        "description": "(request type: AuthenticatePasswordRequest)",
        "operationId": "AuthenticatePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticatePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The user's username or password is invalid"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "The user has not yet verified their registration"
          },
          "409": {
            "description": "The user's account is suspended or locked, and cannot be authenticated or used"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passwords/{Token}/reset/complete": {
      "post": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Completes a password reset attempt",
        "description": "(request type: CompletePasswordResetRequest)",
        "operationId": "CompletePasswordReset",
        "parameters": [
          {
            "name": "Token",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompletePasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passwords/confirm-registration": {
      "post": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Confirms the invitation to register a new person (verifying their email address)",
        "description": "(request type: ConfirmRegistrationPersonPasswordRequest)",
        "operationId": "ConfirmRegistrationPersonPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmRegistrationPersonPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmRegistrationPersonPasswordResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmRegistrationPersonPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Fetches the confirmation token for a registration of a person",
        "description": "(request type: GetRegistrationPersonConfirmationRequest)",
        "operationId": "GetRegistrationPersonConfirmation",
        "parameters": [
          {
            "name": "UserId",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistrationPersonConfirmationResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistrationPersonConfirmationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passwords/register": {
      "post": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Registers a new person on the platform",
        "description": "(request type: RegisterPersonPasswordRequest)",
        "operationId": "RegisterPersonPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterPersonPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterPersonPasswordResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterPersonPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passwords/reset": {
      "post": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Begins a password reset attempt",
        "description": "(request type: InitiatePasswordResetRequest)",
        "operationId": "InitiatePasswordReset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InitiatePasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passwords/{Token}/reset/resend": {
      "post": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Resends a password reset attempt (via email)",
        "description": "(request type: ResendPasswordResetRequest)",
        "operationId": "ResendPasswordReset",
        "parameters": [
          {
            "name": "Token",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPasswordResetRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/passwords/{Token}/reset/verify": {
      "get": {
        "tags": [
          "PasswordCredentialsApi"
        ],
        "summary": "Verifies that the password reset attempt is still valid",
        "description": "(request type: VerifyPasswordResetRequest)",
        "operationId": "VerifyPasswordReset",
        "parameters": [
          {
            "name": "Token",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pricing/plans": {
      "get": {
        "tags": [
          "PricingApi"
        ],
        "summary": "List all the pricing plans available for this product",
        "description": "(request type: ListPricingPlansRequest)",
        "operationId": "ListPricingPlans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListPricingPlansResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListPricingPlansResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/provisioning/drain": {
      "post": {
        "tags": [
          "ProvisioningsApi"
        ],
        "summary": "Drains all the pending provisioning messages",
        "description": "(request type: DrainAllProvisioningsRequest)",
        "operationId": "DrainAllProvisionings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrainAllProvisioningsRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/provisioning/notify": {
      "post": {
        "tags": [
          "ProvisioningsApi"
        ],
        "summary": "Notifies when provisioning of a service has been completed",
        "description": "(request type: NotifyProvisioningRequest)",
        "operationId": "NotifyProvisioning",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyProvisioningRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/record/measure": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Measures an event in the product",
        "description": "(request type: RecordMeasureRequest)",
        "operationId": "RecordMeasure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordMeasureRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/record/use": {
      "post": {
        "tags": [
          "RecordingApi"
        ],
        "summary": "Records a usage of the product",
        "description": "(request type: RecordUseRequest)",
        "operationId": "RecordUse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordUseRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/sso/auth": {
      "post": {
        "tags": [
          "SingleSignOnApi"
        ],
        "summary": "Authenticates a user with a single sign-on provider (also auto-registering them the first time)",
        "description": "(request type: AuthenticateSingleSignOnRequest)",
        "operationId": "AuthenticateSingleSignOn",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticateSingleSignOnRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The provider is not known, or the code is invalid"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "The user's account is suspended or locked, and cannot be authenticated or used"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{Id}": {
      "delete": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Cancels the billing subscription for the organization",
        "description": "(request type: CancelSubscriptionRequest)",
        "operationId": "CancelSubscription",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Fetches the billing subscription for the organization",
        "description": "(request type: GetSubscriptionRequest)",
        "operationId": "GetSubscription",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/subscriptions/{Id}/plan": {
      "put": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Changes the billing subscription plan for the organization",
        "description": "(request type: ChangeSubscriptionPlanRequest)",
        "operationId": "ChangeSubscriptionPlan (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeSubscriptionPlanRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Changes the billing subscription plan for the organization",
        "description": "(request type: ChangeSubscriptionPlanRequest)",
        "operationId": "ChangeSubscriptionPlan (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeSubscriptionPlanRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/subscriptions/{Id}/force": {
      "delete": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Forces the billing subscription to be canceled for the organization.",
        "description": "(request type: ForceCancelSubscriptionRequest)",
        "operationId": "ForceCancelSubscription",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/subscriptions/{Id}/invoices": {
      "get": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Fetches a history of invoices for the subscription",
        "description": "(request type: SearchSubscriptionHistoryRequest)",
        "operationId": "SearchSubscriptionHistory",
        "parameters": [
          {
            "name": "FromUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ToUtc",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Embed",
            "in": "query",
            "description": "List of child resources to embed in the resource",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Filter",
            "in": "query",
            "description": "List of fields to include and exclude in the search result",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "The maximum number of search results to return",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Offset",
            "in": "query",
            "description": "The zero-based index of the first search result",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sort",
            "in": "query",
            "description": "List of fields to sort the results on",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSubscriptionHistoryResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSubscriptionHistoryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/subscriptions/{Id}/transfer": {
      "put": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Transfers the subscription to another Billing Admin, who will become the subscription buyer",
        "description": "(request type: TransferSubscriptionRequest)",
        "operationId": "TransferSubscription (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "SubscriptionsApi"
        ],
        "summary": "Transfers the subscription to another Billing Admin, who will become the subscription buyer",
        "description": "(request type: TransferSubscriptionRequest)",
        "operationId": "TransferSubscription (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubscriptionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/testingonly/authn/hmac/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with HMAC signature authentication",
        "description": "(request type: GetCallerWithHMACTestingOnlyRequest)",
        "operationId": "GetCallerWithHMACTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/testingonly/authn/token/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with token authentication",
        "description": "(request type: GetCallerWithTokenOrAPIKeyTestingOnlyRequest)",
        "operationId": "GetCallerWithTokenOrAPIKeyTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/testingonly/authz/none/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with no authorization",
        "description": "(request type: AuthorizeByNothingTestingOnlyRequest)",
        "operationId": "AuthorizeByNothingTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/authz/feature/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with feature authorization",
        "description": "(request type: AuthorizeByFeatureTestingOnlyRequest)",
        "operationId": "AuthorizeByFeatureTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/testingonly/authz/role/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with role authorization",
        "description": "(request type: AuthorizeByRoleTestingOnlyRequest)",
        "operationId": "AuthorizeByRoleTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetCallerTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/testingonly/negotiations/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests content negotiation with a specified format",
        "description": "(request type: ContentNegotiationsTestingOnlyRequest)",
        "operationId": "ContentNegotiationsTestingOnly",
        "parameters": [
          {
            "name": "Format",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/repositories/destroy": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Destroys all repositories",
        "description": "(request type: DestroyAllRepositoriesRequest)",
        "operationId": "DestroyAllRepositories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DestroyAllRepositoriesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/errors/error": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests errors, by returning an error result",
        "description": "(request type: ErrorsErrorTestingOnlyRequest)",
        "operationId": "ErrorsErrorTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/errors/throws": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests errors, by throwing an exception",
        "description": "(request type: ErrorsThrowTestingOnlyRequest)",
        "operationId": "ErrorsThrowTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/formats/roundtrip": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests response formats",
        "description": "(request type: FormatsTestingOnlyRequest)",
        "operationId": "FormatsTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormatsTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormatsTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FormatsTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/general/body/empty": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests the use of an empty post body",
        "description": "(request type: PostWithEmptyBodyTestingOnlyRequest)",
        "operationId": "PostWithEmptyBodyTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWithEmptyBodyTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/general/body/{astringproperty}/{anumberproperty}/route": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests the use of an empty post body with route parameters Notice the use of Infrastructure.Web.Api.Interfaces.WebRequest`2 instead of Infrastructure.Web.Api.Interfaces.IWebRequest`1",
        "description": "(request type: PostWithRouteParamsAndEmptyBodyTestingOnlyRequest)",
        "operationId": "PostWithRouteParamsAndEmptyBodyTestingOnly",
        "parameters": [
          {
            "name": "ANumberProperty",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "AStringProperty",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWithRouteParamsAndEmptyBodyTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/general/enum": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests the use of enums in the request",
        "description": "(request type: PostWithEnumTestingOnlyRequest)",
        "operationId": "PostWithEnumTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostWithEnumTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/security/none": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with anonymous access",
        "description": "(request type: GetInsecureTestingOnlyRequest)",
        "operationId": "GetInsecureTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests access with anonymous access",
        "description": "(request type: PostInsecureTestingOnlyRequest)",
        "operationId": "PostInsecureTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostInsecureTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/openapi/{Id}": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests OpenAPI swagger for GET requests",
        "description": "(request type: OpenApiGetTestingOnlyRequest)",
        "operationId": "OpenApiGetTestingOnly",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "description": "anid",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OptionalField",
            "in": "query",
            "description": "anoptionalfield",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequiredField",
            "in": "query",
            "description": "arequiredfield",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests OpenAPI swagger for POST requests",
        "description": "(request type: OpenApiPostTestingOnlyRequest)",
        "operationId": "OpenApiPostTestingOnly",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenApiPostTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "a custom conflict response"
          },
          "419": {
            "description": "a special response"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests OpenAPI swagger for POST requests",
        "description": "(request type: OpenApiPutTestingOnlyRequest)",
        "operationId": "OpenApiPutTestingOnly (Put)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenApiPutTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "a custom conflict response"
          },
          "419": {
            "description": "a special response"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests OpenAPI swagger for POST requests",
        "description": "(request type: OpenApiPutTestingOnlyRequest)",
        "operationId": "OpenApiPutTestingOnly (Patch)",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenApiPutTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "a custom conflict response"
          },
          "419": {
            "description": "a special response"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/openapi/{Id}/binary": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests OpenAPI swagger for multipart-form POST requests",
        "description": "(request type: OpenApiPostMultiPartFormTestingOnlyRequest)",
        "operationId": "OpenApiPostMultiPartFormTestingOnly",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files",
                  "requiredField"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "optionalField": {
                    "type": "string"
                  },
                  "requiredField": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/correlations/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests request correlation",
        "description": "(request type: RequestCorrelationsTestingOnlyRequest)",
        "operationId": "RequestCorrelationsTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/delete1": {
      "delete": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for DELETE requests, with no response",
        "description": "(request type: StatusesDeleteTestingOnlyRequest)",
        "operationId": "StatusesDeleteTestingOnly",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/delete2": {
      "delete": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for DELETE requests, with a response",
        "description": "(request type: StatusesDeleteWithResponseTestingOnlyRequest)",
        "operationId": "StatusesDeleteWithResponseTestingOnly",
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/get": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for GET requests",
        "description": "(request type: StatusesGetTestingOnlyRequest)",
        "operationId": "StatusesGetTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/post1": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for POST requests, without a location",
        "description": "(request type: StatusesPostTestingOnlyRequest)",
        "operationId": "StatusesPostTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusesPostTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/post2": {
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for POST requests, with a location",
        "description": "(request type: StatusesPostWithLocationTestingOnlyRequest)",
        "operationId": "StatusesPostWithLocationTestingOnly",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusesPostWithLocationTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/putpatch": {
      "put": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for PUT/PATCH requests",
        "description": "(request type: StatusesPutPatchTestingOnlyRequest)",
        "operationId": "StatusesPutPatchTestingOnly (Put)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusesPutPatchTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for PUT/PATCH requests",
        "description": "(request type: StatusesPutPatchTestingOnlyRequest)",
        "operationId": "StatusesPutPatchTestingOnly (Patch)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatusesPutPatchTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/statuses/search": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests default status code for SEARCH requests",
        "description": "(request type: StatusesSearchTestingOnlyRequest)",
        "operationId": "StatusesSearchTestingOnly",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlySearchResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StatusesTestingOnlySearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/validations/unvalidated": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests response for non-validated requests",
        "description": "(request type: ValidationsUnvalidatedTestingOnlyRequest)",
        "operationId": "ValidationsUnvalidatedTestingOnly",
        "parameters": [
          {
            "name": "Id",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/testingonly/validations/validated/{Id}": {
      "get": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests response for validated GET requests",
        "description": "(request type: ValidationsValidatedGetTestingOnlyRequest)",
        "operationId": "ValidationsValidatedGetTestingOnly",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "OptionalField",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequiredField",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestingWebApi"
        ],
        "summary": "Tests response for validated POST requests",
        "description": "(request type: ValidationsValidatedPostTestingOnlyRequest)",
        "operationId": "ValidationsValidatedPostTestingOnly",
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidationsValidatedPostTestingOnlyRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/StringMessageTestingOnlyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/usages/deliver": {
      "post": {
        "tags": [
          "UsagesApi"
        ],
        "summary": "Delivers a usage event",
        "description": "(request type: DeliverUsageRequest)",
        "operationId": "DeliverUsage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliverUsageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeliverMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/usages/drain": {
      "post": {
        "tags": [
          "UsagesApi"
        ],
        "summary": "Drains all the pending usage messages",
        "description": "(request type: DrainAllUsagesRequest)",
        "operationId": "DrainAllUsages",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrainAllUsagesRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "HMAC": [ ]
          }
        ]
      }
    },
    "/profiles/{UserId}/contact": {
      "put": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Changes the user's contact address",
        "description": "(request type: ChangeProfileContactAddressRequest)",
        "operationId": "ChangeProfileContactAddress (Put)",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProfileContactAddressRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Changes the user's contact address",
        "description": "(request type: ChangeProfileContactAddressRequest)",
        "operationId": "ChangeProfileContactAddress (Patch)",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProfileContactAddressRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/profiles/{UserId}": {
      "put": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Changes the user's profile information",
        "description": "(request type: ChangeProfileRequest)",
        "operationId": "ChangeProfile (Put)",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProfileRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Changes the user's profile information",
        "description": "(request type: ChangeProfileRequest)",
        "operationId": "ChangeProfile (Patch)",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeProfileRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/profiles/{UserId}/avatar": {
      "put": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Changes the user's avatar image",
        "description": "(request type: ChangeProfileAvatarRequest)",
        "operationId": "ChangeProfileAvatar (Put)",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeProfileAvatarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeProfileAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "patch": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Changes the user's avatar image",
        "description": "(request type: ChangeProfileAvatarRequest)",
        "operationId": "ChangeProfileAvatar (Patch)",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeProfileAvatarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ChangeProfileAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Removes the user's avatar image",
        "description": "(request type: DeleteProfileAvatarRequest)",
        "operationId": "DeleteProfileAvatar",
        "parameters": [
          {
            "name": "UserId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProfileAvatarResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteProfileAvatarResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          },
          {
            "APIKey": [ ]
          }
        ]
      }
    },
    "/profiles/me": {
      "get": {
        "tags": [
          "UserProfilesApi"
        ],
        "summary": "Fetches the profile of the authenticated user",
        "description": "(request type: GetProfileForCallerRequest)",
        "operationId": "GetProfileForCaller",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileForCallerResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileForCallerResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The server cannot or will not process the request due to something that is perceived to be a client error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Validation": {
                    "summary": "Validation Error",
                    "description": "The incoming request is invalid in some way. The 'errors' will contain the details of each of the validation errors.",
                    "value": "{\r\n  \"type\": \"https://datatracker.ietf.org/doc/html/rfc9110#section-15.5\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"The error for FieldA\",\r\n  \"instance\": \"https://api.server.com/resource/123\",\r\n  \"errors\": [\r\n    {\r\n      \"reason\": \"The error for FieldA\",\r\n      \"rule\": \"The Code for FieldA\"\r\n    },\r\n    {\r\n      \"reason\": \"The error for FieldB\",\r\n      \"rule\": \"The Code for FieldB\"\r\n    }\r\n  ]\r\n}"
                  },
                  "RuleViolation": {
                    "summary": "Rule Violation",
                    "description": "A violation of a rule about whether this operation can be executed by this caller, or in the state the resource is in, at this time.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.5.1\",\r\n  \"title\": \"Bad Request\",\r\n  \"status\": 400,\r\n  \"detail\": \"A description of the violation\"\r\n}"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The client must authenticate itself to get the requested response"
          },
          "402": {
            "description": "Payment Required: The client must have payment information to get ther requested response"
          },
          "403": {
            "description": "Forbidden: The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource"
          },
          "404": {
            "description": "Not Found: The server cannot find the requested resource"
          },
          "405": {
            "description": "Method Not Allowed: The request is not allowed by the current state of the resource"
          },
          "409": {
            "description": "Conflict: The request conflicts with the current state of the resource"
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occured on the server, which should not have happened in normal operation",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                },
                "examples": {
                  "Unexpected": {
                    "summary": "Unexpected Error",
                    "description": "An unexpected error occured on the server, which should not have happened in normal operation. Please report this error, and the conditions under which it was discovered, to the support team.",
                    "value": "{\r\n  \"type\": \"https://tools.ietf.org/html/rfc9110#section-15.6.1\",\r\n  \"title\": \"An error occurred while processing your request.\",\r\n  \"status\": 500,\r\n  \"detail\": \"A description of the error\"\r\n}"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIKey": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "expiresOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignPlatformRolesRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignRolesToOrganizationRequest": {
        "required": [
          "id",
          "userId"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Audit": {
        "type": "object",
        "properties": {
          "againstId": {
            "type": "string",
            "nullable": true
          },
          "auditCode": {
            "type": "string",
            "nullable": true
          },
          "messageTemplate": {
            "type": "string",
            "nullable": true
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          },
          "templateArguments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticatePasswordRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateResponse": {
        "type": "object",
        "properties": {
          "tokens": {
            "$ref": "#/components/schemas/AuthenticateTokens"
          }
        },
        "additionalProperties": false
      },
      "AuthenticateSingleSignOnRequest": {
        "required": [
          "authCode",
          "provider"
        ],
        "type": "object",
        "properties": {
          "authCode": {
            "minLength": 1,
            "type": "string"
          },
          "invitationToken": {
            "type": "string",
            "nullable": true
          },
          "provider": {
            "minLength": 1,
            "type": "string"
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticateTokens": {
        "type": "object",
        "properties": {
          "accessToken": {
            "$ref": "#/components/schemas/AuthenticationToken"
          },
          "refreshToken": {
            "$ref": "#/components/schemas/AuthenticationToken"
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AuthenticationToken": {
        "type": "object",
        "properties": {
          "expiresOn": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/TokenType"
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Booking": {
        "type": "object",
        "properties": {
          "borrowerId": {
            "type": "string",
            "nullable": true
          },
          "carId": {
            "type": "string",
            "nullable": true
          },
          "endUtc": {
            "type": "string",
            "format": "date-time"
          },
          "startUtc": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Car": {
        "type": "object",
        "properties": {
          "managers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CarManager"
            },
            "nullable": true
          },
          "manufacturer": {
            "$ref": "#/components/schemas/CarManufacturer"
          },
          "owner": {
            "$ref": "#/components/schemas/CarOwner"
          },
          "plate": {
            "$ref": "#/components/schemas/CarLicensePlate"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CarLicensePlate": {
        "type": "object",
        "properties": {
          "jurisdiction": {
            "type": "string",
            "nullable": true
          },
          "number": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CarManager": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CarManufacturer": {
        "type": "object",
        "properties": {
          "make": {
            "type": "string",
            "nullable": true
          },
          "model": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "CarOwner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeDefaultOrganizationRequest": {
        "required": [
          "organizationId"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ChangeOrganizationRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeProfileAvatarResponse": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        },
        "additionalProperties": false
      },
      "ChangeProfileContactAddressRequest": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "line3": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeProfileRequest": {
        "required": [
          "userId"
        ],
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangeSubscriptionPlanRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "planId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CompletePasswordResetRequest": {
        "required": [
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConfirmEmailDeliveredRequest": {
        "required": [
          "receiptId"
        ],
        "type": "object",
        "properties": {
          "deliveredAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "receiptId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConfirmEmailDeliveryFailedRequest": {
        "required": [
          "receiptId"
        ],
        "type": "object",
        "properties": {
          "failedAtUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "receiptId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConfirmRegistrationPersonPasswordRequest": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ConfirmRegistrationPersonPasswordResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "CreateAPIKeyForCallerRequest": {
        "type": "object",
        "properties": {
          "expiresOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAPIKeyResponse": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateOrganizationRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "CustomDto": {
        "type": "object",
        "properties": {
          "double": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "enum": {
            "$ref": "#/components/schemas/CustomEnum"
          },
          "integer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "string": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomEnum": {
        "enum": [
          "One",
          "TwentyOne",
          "OneHundredAndOne"
        ],
        "type": "string"
      },
      "DeleteProfileAvatarResponse": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        },
        "additionalProperties": false
      },
      "DeliverAuditRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeliverMessageResponse": {
        "type": "object",
        "properties": {
          "isSent": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "DeliverUsageRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "DeliveredEmail": {
        "type": "object",
        "properties": {
          "attempts": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "deliveredAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "failedDeliveryAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "failedDeliveryReason": {
            "type": "string",
            "nullable": true
          },
          "isDelivered": {
            "type": "boolean"
          },
          "isDeliveryFailed": {
            "type": "boolean"
          },
          "isSent": {
            "type": "boolean"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "toDisplayName": {
            "type": "string",
            "nullable": true
          },
          "toEmailAddress": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DestroyAllRepositoriesRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DomainEvent": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "nullable": true
          },
          "eventType": {
            "type": "string",
            "nullable": true
          },
          "metadataFullyQualifiedName": {
            "type": "string",
            "nullable": true
          },
          "rootAggregateType": {
            "type": "string",
            "nullable": true
          },
          "streamName": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DrainAllAuditsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DrainAllDomainEventsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DrainAllEmailsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DrainAllProvisioningsRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "DrainAllUsagesRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "EmptyResponse": {
        "type": "object",
        "additionalProperties": false
      },
      "EndUser": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/EndUserAccess"
          },
          "classification": {
            "$ref": "#/components/schemas/EndUserClassification"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EndUserStatus"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EndUserAccess": {
        "enum": [
          "Enabled",
          "Suspended"
        ],
        "type": "string"
      },
      "EndUserClassification": {
        "enum": [
          "Person",
          "Machine"
        ],
        "type": "string"
      },
      "EndUserStatus": {
        "enum": [
          "Unregistered",
          "Registered"
        ],
        "type": "string"
      },
      "EndUserWithMemberships": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/EndUserAccess"
          },
          "classification": {
            "$ref": "#/components/schemas/EndUserClassification"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/EndUserStatus"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Membership"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ExportSubscriptionsToMigrateResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionToMigrate"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeatureFlag": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Filtering": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "FormatsTestingOnlyRequest": {
        "type": "object",
        "properties": {
          "custom": {
            "$ref": "#/components/schemas/CustomDto"
          },
          "double": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "enum": {
            "$ref": "#/components/schemas/CustomEnum"
          },
          "integer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "string": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FormatsTestingOnlyResponse": {
        "type": "object",
        "properties": {
          "custom": {
            "$ref": "#/components/schemas/CustomDto"
          },
          "double": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "enum": {
            "$ref": "#/components/schemas/CustomEnum"
          },
          "integer": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "string": {
            "type": "string",
            "nullable": true
          },
          "time": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAllFeatureFlagsResponse": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureFlag"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCallerTestingOnlyResponse": {
        "type": "object",
        "properties": {
          "callerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetCarResponse": {
        "type": "object",
        "properties": {
          "car": {
            "$ref": "#/components/schemas/Car"
          }
        },
        "additionalProperties": false
      },
      "GetFeatureFlagResponse": {
        "type": "object",
        "properties": {
          "flag": {
            "$ref": "#/components/schemas/FeatureFlag"
          }
        },
        "additionalProperties": false
      },
      "GetImageResponse": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationResponse": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "additionalProperties": false
      },
      "GetOrganizationSettingsResponse": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          },
          "settings": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetProfileForCallerResponse": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/UserProfileForCaller"
          }
        },
        "additionalProperties": false
      },
      "GetProfileResponse": {
        "type": "object",
        "properties": {
          "profile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        },
        "additionalProperties": false
      },
      "GetRegistrationPersonConfirmationResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetSubscriptionResponse": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/SubscriptionWithPlan"
          }
        },
        "additionalProperties": false
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EndUserWithMemberships"
          }
        },
        "additionalProperties": false
      },
      "HealthCheckResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Image": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InitiatePasswordResetRequest": {
        "required": [
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "emailAddress": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Invitation": {
        "type": "object",
        "properties": {
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InviteGuestRequest": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "InviteGuestResponse": {
        "type": "object",
        "properties": {
          "invitation": {
            "$ref": "#/components/schemas/Invitation"
          }
        },
        "additionalProperties": false
      },
      "InviteMemberToOrganizationRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InviteMemberToOrganizationResponse": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "additionalProperties": false
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "includesTax": {
            "type": "boolean"
          },
          "invoicedOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            },
            "nullable": true
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceNote"
            },
            "nullable": true
          },
          "payment": {
            "$ref": "#/components/schemas/InvoiceItemPayment"
          },
          "periodEndUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "periodStartUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/InvoiceStatus"
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceItemPayment": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "paidOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceLineItem": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "isTaxed": {
            "type": "boolean"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "taxAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceNote": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InvoiceStatus": {
        "enum": [
          "Unpaid",
          "Paid"
        ],
        "type": "string"
      },
      "InvoiceSummary": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "nextUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListMembersForOrganizationResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "members": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationMember"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListMembershipsForCallerResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "memberships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Membership"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListPricingPlansResponse": {
        "type": "object",
        "properties": {
          "plans": {
            "$ref": "#/components/schemas/PricingPlans"
          }
        },
        "additionalProperties": false
      },
      "MachineCredential": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "nullable": true
          },
          "createdById": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "expiresOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailgunDeliveryStatus": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailgunEventData": {
        "type": "object",
        "properties": {
          "delivery-status": {
            "$ref": "#/components/schemas/MailgunDeliveryStatus"
          },
          "event": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "$ref": "#/components/schemas/MailgunMessage"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailgunMessage": {
        "type": "object",
        "properties": {
          "headers": {
            "$ref": "#/components/schemas/MailgunMessageHeaders"
          }
        },
        "additionalProperties": false
      },
      "MailgunMessageHeaders": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "nullable": true
          },
          "message-id": {
            "type": "string",
            "nullable": true
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MailgunNotifyWebhookEventRequest": {
        "type": "object",
        "properties": {
          "event-data": {
            "$ref": "#/components/schemas/MailgunEventData"
          },
          "signature": {
            "$ref": "#/components/schemas/MailgunSignature"
          }
        },
        "additionalProperties": false
      },
      "MailgunSignature": {
        "type": "object",
        "properties": {
          "signature": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MakeBookingRequest": {
        "required": [
          "carId",
          "startUtc"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "nullable": true
          },
          "carId": {
            "minLength": 1,
            "type": "string"
          },
          "endUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startUtc": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "MakeBookingResponse": {
        "type": "object",
        "properties": {
          "booking": {
            "$ref": "#/components/schemas/Booking"
          }
        },
        "additionalProperties": false
      },
      "Membership": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "organizationId": {
            "type": "string",
            "nullable": true
          },
          "ownership": {
            "$ref": "#/components/schemas/OrganizationOwnership"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MigrateSubscriptionRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "providerState": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MigrateSubscriptionResponse": {
        "type": "object",
        "properties": {
          "subscription": {
            "$ref": "#/components/schemas/Subscription"
          }
        },
        "additionalProperties": false
      },
      "NotifyDomainEventRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NotifyProvisioningRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "OpenApiPostTestingOnlyRequest": {
        "required": [
          "id",
          "requiredField"
        ],
        "type": "object",
        "properties": {
          "optionalField": {
            "type": "string",
            "description": "anoptionalfield",
            "nullable": true
          },
          "requiredField": {
            "minLength": 1,
            "type": "string",
            "description": "arequiredfield"
          }
        },
        "additionalProperties": false
      },
      "OpenApiPutTestingOnlyRequest": {
        "required": [
          "id",
          "requiredField"
        ],
        "type": "object",
        "properties": {
          "optionalField": {
            "type": "string",
            "description": "anoptionalfield",
            "nullable": true
          },
          "requiredField": {
            "minLength": 1,
            "type": "string",
            "description": "arequiredfield"
          }
        },
        "additionalProperties": false
      },
      "Organization": {
        "type": "object",
        "properties": {
          "avatarUrl": {
            "type": "string",
            "nullable": true
          },
          "createdById": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "ownership": {
            "$ref": "#/components/schemas/OrganizationOwnership"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationMember": {
        "type": "object",
        "properties": {
          "classification": {
            "$ref": "#/components/schemas/UserProfileClassification"
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isDefault": {
            "type": "boolean"
          },
          "isOwner": {
            "type": "boolean"
          },
          "isRegistered": {
            "type": "boolean"
          },
          "name": {
            "$ref": "#/components/schemas/PersonName"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "OrganizationOwnership": {
        "enum": [
          "Shared",
          "Personal"
        ],
        "type": "string"
      },
      "PasswordCredential": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EndUser"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PaymentMethodStatus": {
        "enum": [
          "Invalid",
          "Valid"
        ],
        "type": "string"
      },
      "PaymentMethodType": {
        "enum": [
          "None",
          "Card",
          "Other"
        ],
        "type": "string"
      },
      "PeriodFrequencyUnit": {
        "enum": [
          "Eternity",
          "Day",
          "Week",
          "Month",
          "Year"
        ],
        "type": "string"
      },
      "PersonName": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanPeriod": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "unit": {
            "$ref": "#/components/schemas/PeriodFrequencyUnit"
          }
        },
        "additionalProperties": false
      },
      "PostInsecureTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "PostWithEmptyBodyTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "PostWithEnumTestingOnlyRequest": {
        "type": "object",
        "properties": {
          "anEnum": {
            "$ref": "#/components/schemas/TestEnum"
          },
          "aProperty": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PostWithRouteParamsAndEmptyBodyTestingOnlyRequest": {
        "required": [
          "aNumberProperty",
          "aStringProperty"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PricingFeatureItem": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "isIncluded": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "PricingFeatureSection": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingFeatureItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingPlan": {
        "type": "object",
        "properties": {
          "cost": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "featureSection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingFeatureSection"
            },
            "nullable": true
          },
          "isRecommended": {
            "type": "boolean"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "period": {
            "$ref": "#/components/schemas/PlanPeriod"
          },
          "setupCost": {
            "type": "number",
            "format": "double"
          },
          "trial": {
            "$ref": "#/components/schemas/SubscriptionTrialPeriod"
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PricingPlans": {
        "type": "object",
        "properties": {
          "annually": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingPlan"
            },
            "nullable": true
          },
          "daily": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingPlan"
            },
            "nullable": true
          },
          "eternally": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingPlan"
            },
            "nullable": true
          },
          "monthly": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingPlan"
            },
            "nullable": true
          },
          "weekly": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PricingPlan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProfileAddress": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "line3": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RecordMeasureRequest": {
        "required": [
          "eventName"
        ],
        "type": "object",
        "properties": {
          "additional": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "eventName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RecordUseRequest": {
        "required": [
          "eventName"
        ],
        "type": "object",
        "properties": {
          "additional": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "eventName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenRequest": {
        "required": [
          "refreshToken"
        ],
        "type": "object",
        "properties": {
          "refreshToken": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "tokens": {
            "$ref": "#/components/schemas/AuthenticateTokens"
          }
        },
        "additionalProperties": false
      },
      "RegisterCarRequest": {
        "required": [
          "jurisdiction",
          "make",
          "model",
          "numberPlate",
          "year"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "nullable": true
          },
          "jurisdiction": {
            "minLength": 1,
            "type": "string"
          },
          "make": {
            "minLength": 1,
            "type": "string"
          },
          "model": {
            "minLength": 1,
            "type": "string"
          },
          "numberPlate": {
            "minLength": 1,
            "type": "string"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RegisterMachineRequest": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "apiKeyExpiresOnUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterMachineResponse": {
        "type": "object",
        "properties": {
          "machine": {
            "$ref": "#/components/schemas/MachineCredential"
          }
        },
        "additionalProperties": false
      },
      "RegisterPersonPasswordRequest": {
        "required": [
          "emailAddress",
          "firstName",
          "lastName",
          "password"
        ],
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "minLength": 1,
            "type": "string"
          },
          "firstName": {
            "minLength": 1,
            "type": "string"
          },
          "invitationToken": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          },
          "termsAndConditionsAccepted": {
            "type": "boolean"
          },
          "timezone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterPersonPasswordResponse": {
        "type": "object",
        "properties": {
          "credential": {
            "$ref": "#/components/schemas/PasswordCredential"
          }
        },
        "additionalProperties": false
      },
      "ResendGuestInvitationRequest": {
        "required": [
          "token"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ResendPasswordResetRequest": {
        "required": [
          "token"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ScheduleMaintenanceCarRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "nullable": true
          },
          "fromUtc": {
            "type": "string",
            "format": "date-time"
          },
          "toUtc": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SearchAllAPIKeysResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/APIKey"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchAllAuditsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "audits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Audit"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchAllBookingsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "bookings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Booking"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchAllCarUnavailabilitiesResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "unavailabilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Unavailability"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchAllCarsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "cars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Car"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchAllDomainEventsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainEvent"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchEmailDeliveriesResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "emails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeliveredEmail"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SearchResultMetadata": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/Filtering"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/Sorting"
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "SearchSubscriptionHistoryResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendEmailRequest": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "SortDirection": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string"
      },
      "Sorting": {
        "type": "object",
        "properties": {
          "by": {
            "type": "string",
            "nullable": true
          },
          "direction": {
            "$ref": "#/components/schemas/SortDirection"
          }
        },
        "additionalProperties": false
      },
      "StatusesPostTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "StatusesPostWithLocationTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "StatusesPutPatchTestingOnlyRequest": {
        "type": "object",
        "additionalProperties": false
      },
      "StatusesTestingOnlyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusesTestingOnlySearchResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "metadata": {
            "$ref": "#/components/schemas/SearchResultMetadata"
          }
        },
        "additionalProperties": false
      },
      "StringMessageTestingOnlyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "buyerId": {
            "type": "string",
            "nullable": true
          },
          "owningEntityId": {
            "type": "string",
            "nullable": true
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "providerState": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPaymentMethod": {
        "type": "object",
        "properties": {
          "expiresOn": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/PaymentMethodStatus"
          },
          "type": {
            "$ref": "#/components/schemas/PaymentMethodType"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "isTrial": {
            "type": "boolean"
          },
          "tier": {
            "$ref": "#/components/schemas/SubscriptionTier"
          },
          "trialEndDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionStatus": {
        "enum": [
          "Unsubscribed",
          "Activated",
          "Canceled",
          "Canceling"
        ],
        "type": "string"
      },
      "SubscriptionTier": {
        "enum": [
          "Unsubscribed",
          "Standard",
          "Professional",
          "Enterprise"
        ],
        "type": "string"
      },
      "SubscriptionToMigrate": {
        "type": "object",
        "properties": {
          "buyerId": {
            "type": "string",
            "nullable": true
          },
          "owningEntityId": {
            "type": "string",
            "nullable": true
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "providerState": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "buyer": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionTrialPeriod": {
        "type": "object",
        "properties": {
          "frequency": {
            "type": "integer",
            "format": "int32"
          },
          "hasTrial": {
            "type": "boolean"
          },
          "unit": {
            "$ref": "#/components/schemas/PeriodFrequencyUnit"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionWithPlan": {
        "type": "object",
        "properties": {
          "buyerId": {
            "type": "string",
            "nullable": true
          },
          "owningEntityId": {
            "type": "string",
            "nullable": true
          },
          "providerName": {
            "type": "string",
            "nullable": true
          },
          "providerState": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "canBeCanceled": {
            "type": "boolean"
          },
          "canBeUnsubscribed": {
            "type": "boolean"
          },
          "canceledDateUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/InvoiceSummary"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/SubscriptionPaymentMethod"
          },
          "period": {
            "$ref": "#/components/schemas/PlanPeriod"
          },
          "plan": {
            "$ref": "#/components/schemas/SubscriptionPlan"
          },
          "status": {
            "$ref": "#/components/schemas/SubscriptionStatus"
          },
          "subscriptionReference": {
            "type": "string",
            "nullable": true
          },
          "buyerReference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TakeOfflineCarRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "organizationId": {
            "type": "string",
            "description": "An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used",
            "nullable": true
          },
          "fromUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "toUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TestEnum": {
        "enum": [
          "Value1",
          "Value2",
          "Value3"
        ],
        "type": "string"
      },
      "TokenType": {
        "enum": [
          "OtherToken",
          "AccessToken",
          "RefreshToken"
        ],
        "type": "string"
      },
      "TransferSubscriptionRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnInviteMemberFromOrganizationResponse": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/Organization"
          }
        },
        "additionalProperties": false
      },
      "UnassignPlatformRolesRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UnassignRolesFromOrganizationRequest": {
        "required": [
          "id",
          "userId"
        ],
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "userId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Unavailability": {
        "type": "object",
        "properties": {
          "carId": {
            "type": "string",
            "nullable": true
          },
          "causedByReason": {
            "type": "string",
            "nullable": true
          },
          "causedByReference": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateImageRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateImageResponse": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "additionalProperties": false
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/EndUser"
          }
        },
        "additionalProperties": false
      },
      "UploadImageResponse": {
        "type": "object",
        "properties": {
          "image": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "additionalProperties": false
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ProfileAddress"
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "$ref": "#/components/schemas/UserProfileClassification"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/PersonName"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProfileClassification": {
        "enum": [
          "Person",
          "Machine"
        ],
        "type": "string"
      },
      "UserProfileForCaller": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/ProfileAddress"
          },
          "avatarUrl": {
            "type": "string",
            "nullable": true
          },
          "classification": {
            "$ref": "#/components/schemas/UserProfileClassification"
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "emailAddress": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "$ref": "#/components/schemas/PersonName"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "type": "string",
            "nullable": true
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "defaultOrganizationId": {
            "type": "string",
            "nullable": true
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "isAuthenticated": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationsValidatedPostTestingOnlyRequest": {
        "required": [
          "id",
          "requiredField"
        ],
        "type": "object",
        "properties": {
          "optionalField": {
            "type": "string",
            "nullable": true
          },
          "requiredField": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "VerifyGuestInvitationResponse": {
        "type": "object",
        "properties": {
          "invitation": {
            "$ref": "#/components/schemas/Invitation"
          }
        },
        "additionalProperties": false
      },
      "Void": {
        "type": "object",
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Token Authorization using the Bearer scheme. Example: \"Bearer {yourtoken}\"",
        "name": "Authorization",
        "in": "header"
      },
      "APIKey": {
        "type": "apiKey",
        "description": "API Key Authorization using the 'apikey' query parameter.",
        "name": "apikey",
        "in": "query"
      }
    }
  }
}