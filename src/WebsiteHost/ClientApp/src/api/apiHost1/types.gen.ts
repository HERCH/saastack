// This file is auto-generated by @hey-api/openapi-ts

export type APIKey = {
  description?: string | null;
  expiresOnUtc?: string | null;
  key?: string | null;
  userId?: string | null;
  id?: string | null;
};

export type AssignPlatformRolesRequest = {
  roles?: Array<string> | null;
};

export type AssignRolesToOrganizationRequest = {
  roles?: Array<string> | null;
  userId: string;
};

export type Audit = {
  againstId?: string | null;
  auditCode?: string | null;
  messageTemplate?: string | null;
  organizationId?: string | null;
  templateArguments?: Array<string> | null;
  id?: string | null;
};

export type AuthenticatePasswordRequest = {
  password: string;
  username: string;
};

export type AuthenticateResponse = {
  tokens?: AuthenticateTokens;
};

export type AuthenticateSingleSignOnRequest = {
  authCode: string;
  invitationToken?: string | null;
  provider: string;
  username?: string | null;
};

export type AuthenticateTokens = {
  accessToken?: AuthenticationToken;
  refreshToken?: AuthenticationToken;
  userId?: string | null;
};

export type AuthenticationToken = {
  expiresOn?: string | null;
  type?: TokenType;
  value?: string | null;
};

export type Booking = {
  borrowerId?: string | null;
  carId?: string | null;
  endUtc?: string;
  startUtc?: string;
  id?: string | null;
};

export type Car = {
  managers?: Array<CarManager> | null;
  manufacturer?: CarManufacturer;
  owner?: CarOwner;
  plate?: CarLicensePlate;
  status?: string | null;
  id?: string | null;
};

export type CarLicensePlate = {
  jurisdiction?: string | null;
  number?: string | null;
};

export type CarManager = {
  id?: string | null;
};

export type CarManufacturer = {
  make?: string | null;
  model?: string | null;
  year?: number;
};

export type CarOwner = {
  id?: string | null;
};

export type ChangeDefaultOrganizationRequest = {
  organizationId: string;
};

export type ChangeOrganizationRequest = {
  name?: string | null;
};

export type ChangeProfileAvatarResponse = {
  profile?: UserProfile;
};

export type ChangeProfileContactAddressRequest = {
  city?: string | null;
  countryCode?: string | null;
  line1?: string | null;
  line2?: string | null;
  line3?: string | null;
  state?: string | null;
  zip?: string | null;
};

export type ChangeProfileRequest = {
  displayName?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  phoneNumber?: string | null;
  timezone?: string | null;
};

export type ChangeSubscriptionPlanRequest = {
  planId?: string | null;
};

export type CompletePasswordResetRequest = {
  password: string;
};

export type ConfirmEmailDeliveredRequest = {
  deliveredAtUtc?: string | null;
  receiptId: string;
};

export type ConfirmEmailDeliveryFailedRequest = {
  failedAtUtc?: string | null;
  reason?: string | null;
  receiptId: string;
};

export type ConfirmRegistrationPersonPasswordRequest = {
  token: string;
};

export type ConfirmRegistrationPersonPasswordResponse = {
  [key: string]: unknown;
};

export type CreateAPIKeyForCallerRequest = {
  expiresOnUtc?: string | null;
};

export type CreateAPIKeyResponse = {
  apiKey?: string | null;
};

export type CreateOrganizationRequest = {
  name: string;
};

export type CustomDto = {
  double?: number | null;
  enum?: CustomEnum;
  integer?: number | null;
  string?: string | null;
  time?: string | null;
};

export type CustomEnum = "One" | "TwentyOne" | "OneHundredAndOne";

export type DeleteProfileAvatarResponse = {
  profile?: UserProfile;
};

export type DeliverAuditRequest = {
  message: string;
};

export type DeliverMessageResponse = {
  isSent?: boolean;
};

export type DeliverUsageRequest = {
  message: string;
};

export type DeliveredEmail = {
  attempts?: Array<string> | null;
  body?: string | null;
  deliveredAt?: string | null;
  failedDeliveryAt?: string | null;
  failedDeliveryReason?: string | null;
  isDelivered?: boolean;
  isDeliveryFailed?: boolean;
  isSent?: boolean;
  sentAt?: string | null;
  subject?: string | null;
  toDisplayName?: string | null;
  toEmailAddress?: string | null;
  id?: string | null;
};

export type DestroyAllRepositoriesRequest = {
  [key: string]: unknown;
};

export type DomainEvent = {
  data?: string | null;
  eventType?: string | null;
  metadataFullyQualifiedName?: string | null;
  rootAggregateType?: string | null;
  streamName?: string | null;
  version?: number;
  id?: string | null;
};

export type DrainAllAuditsRequest = {
  [key: string]: unknown;
};

export type DrainAllDomainEventsRequest = {
  [key: string]: unknown;
};

export type DrainAllEmailsRequest = {
  [key: string]: unknown;
};

export type DrainAllProvisioningsRequest = {
  [key: string]: unknown;
};

export type DrainAllUsagesRequest = {
  [key: string]: unknown;
};

export type EmptyResponse = {
  [key: string]: unknown;
};

export type EndUser = {
  access?: EndUserAccess;
  classification?: EndUserClassification;
  features?: Array<string> | null;
  roles?: Array<string> | null;
  status?: EndUserStatus;
  id?: string | null;
};

export type EndUserAccess = "Enabled" | "Suspended";

export type EndUserClassification = "Person" | "Machine";

export type EndUserStatus = "Unregistered" | "Registered";

export type EndUserWithMemberships = {
  access?: EndUserAccess;
  classification?: EndUserClassification;
  features?: Array<string> | null;
  roles?: Array<string> | null;
  status?: EndUserStatus;
  id?: string | null;
  memberships?: Array<Membership> | null;
};

export type ExportSubscriptionsToMigrateResponse = {
  metadata?: SearchResultMetadata;
  subscriptions?: Array<SubscriptionToMigrate> | null;
};

export type FeatureFlag = {
  isEnabled?: boolean;
  name?: string | null;
};

export type Filtering = {
  readonly fields?: Array<string> | null;
};

export type FormatsTestingOnlyRequest = {
  custom?: CustomDto;
  double?: number | null;
  enum?: CustomEnum;
  integer?: number | null;
  string?: string | null;
  time?: string | null;
};

export type FormatsTestingOnlyResponse = {
  custom?: CustomDto;
  double?: number | null;
  enum?: CustomEnum;
  integer?: number | null;
  string?: string | null;
  time?: string | null;
};

export type GetAllFeatureFlagsResponse = {
  flags?: Array<FeatureFlag> | null;
};

export type GetCallerTestingOnlyResponse = {
  callerId?: string | null;
};

export type GetCarResponse = {
  car?: Car;
};

export type GetFeatureFlagResponse = {
  flag?: FeatureFlag;
};

export type GetImageResponse = {
  image?: Image;
};

export type GetOrganizationResponse = {
  organization?: Organization;
};

export type GetOrganizationSettingsResponse = {
  organization?: Organization;
  settings?: {
    [key: string]: string;
  } | null;
};

export type GetProfileForCallerResponse = {
  profile?: UserProfileForCaller;
};

export type GetProfileResponse = {
  profile?: UserProfile;
};

export type GetRegistrationPersonConfirmationResponse = {
  token?: string | null;
};

export type GetSubscriptionResponse = {
  subscription?: SubscriptionWithPlan;
};

export type GetUserResponse = {
  user?: EndUserWithMemberships;
};

export type HealthCheckResponse = {
  name?: string | null;
  status?: string | null;
};

export type Image = {
  contentType?: string | null;
  description?: string | null;
  filename?: string | null;
  url?: string | null;
  id?: string | null;
};

export type InitiatePasswordResetRequest = {
  emailAddress: string;
};

export type Invitation = {
  emailAddress?: string | null;
  firstName?: string | null;
  lastName?: string | null;
};

export type InviteGuestRequest = {
  email: string;
};

export type InviteGuestResponse = {
  invitation?: Invitation;
};

export type InviteMemberToOrganizationRequest = {
  email?: string | null;
  userId?: string | null;
};

export type InviteMemberToOrganizationResponse = {
  organization?: Organization;
};

export type Invoice = {
  amount?: number | null;
  currency?: string | null;
  includesTax?: boolean;
  invoicedOnUtc?: string | null;
  lineItems?: Array<InvoiceLineItem> | null;
  notes?: Array<InvoiceNote> | null;
  payment?: InvoiceItemPayment;
  periodEndUtc?: string | null;
  periodStartUtc?: string | null;
  status?: InvoiceStatus;
  taxAmount?: number | null;
  id?: string | null;
};

export type InvoiceItemPayment = {
  amount?: number | null;
  currency?: string | null;
  paidOnUtc?: string | null;
  reference?: string | null;
};

export type InvoiceLineItem = {
  amount?: number | null;
  currency?: string | null;
  description?: string | null;
  isTaxed?: boolean;
  reference?: string | null;
  taxAmount?: number | null;
};

export type InvoiceNote = {
  description?: string | null;
};

export type InvoiceStatus = "Unpaid" | "Paid";

export type InvoiceSummary = {
  amount?: number;
  currency?: string | null;
  nextUtc?: string | null;
};

export type ListMembersForOrganizationResponse = {
  metadata?: SearchResultMetadata;
  members?: Array<OrganizationMember> | null;
};

export type ListMembershipsForCallerResponse = {
  metadata?: SearchResultMetadata;
  memberships?: Array<Membership> | null;
};

export type ListPricingPlansResponse = {
  plans?: PricingPlans;
};

export type MachineCredential = {
  apiKey?: string | null;
  createdById?: string | null;
  description?: string | null;
  expiresOnUtc?: string | null;
  id?: string | null;
};

export type MailgunDeliveryStatus = {
  description?: string | null;
};

export type MailgunEventData = {
  "delivery-status"?: MailgunDeliveryStatus;
  event?: string | null;
  id?: string | null;
  message?: MailgunMessage;
  reason?: string | null;
  severity?: string | null;
  timestamp?: number | null;
};

export type MailgunMessage = {
  headers?: MailgunMessageHeaders;
};

export type MailgunMessageHeaders = {
  from?: string | null;
  "message-id"?: string | null;
  subject?: string | null;
  to?: string | null;
};

export type MailgunNotifyWebhookEventRequest = {
  "event-data"?: MailgunEventData;
  signature?: MailgunSignature;
};

export type MailgunSignature = {
  signature?: string | null;
  timestamp?: string | null;
  token?: string | null;
};

export type MakeBookingRequest = {
  /**
   * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
   */
  organizationId?: string | null;
  carId: string;
  endUtc?: string | null;
  startUtc: string;
};

export type MakeBookingResponse = {
  booking?: Booking;
};

export type Membership = {
  features?: Array<string> | null;
  isDefault?: boolean;
  organizationId?: string | null;
  ownership?: OrganizationOwnership;
  roles?: Array<string> | null;
  userId?: string | null;
  id?: string | null;
};

export type MigrateSubscriptionRequest = {
  providerName?: string | null;
  providerState?: {
    [key: string]: string | null;
  } | null;
};

export type MigrateSubscriptionResponse = {
  subscription?: Subscription;
};

export type NotifyDomainEventRequest = {
  message: string;
};

export type NotifyProvisioningRequest = {
  message: string;
};

export type OpenApiPostTestingOnlyRequest = {
  /**
   * anoptionalfield
   */
  optionalField?: string | null;
  /**
   * arequiredfield
   */
  requiredField: string;
};

export type OpenApiPutTestingOnlyRequest = {
  /**
   * anoptionalfield
   */
  optionalField?: string | null;
  /**
   * arequiredfield
   */
  requiredField: string;
};

export type Organization = {
  avatarUrl?: string | null;
  createdById?: string | null;
  name?: string | null;
  ownership?: OrganizationOwnership;
  id?: string | null;
};

export type OrganizationMember = {
  classification?: UserProfileClassification;
  emailAddress?: string | null;
  features?: Array<string> | null;
  isDefault?: boolean;
  isOwner?: boolean;
  isRegistered?: boolean;
  name?: PersonName;
  roles?: Array<string> | null;
  userId?: string | null;
  id?: string | null;
};

export type OrganizationOwnership = "Shared" | "Personal";

export type PasswordCredential = {
  user?: EndUser;
  id?: string | null;
};

export type PaymentMethodStatus = "Invalid" | "Valid";

export type PaymentMethodType = "None" | "Card" | "Other";

export type PeriodFrequencyUnit = "Eternity" | "Day" | "Week" | "Month" | "Year";

export type PersonName = {
  firstName?: string | null;
  lastName?: string | null;
};

export type PlanPeriod = {
  frequency?: number;
  unit?: PeriodFrequencyUnit;
};

export type PostInsecureTestingOnlyRequest = {
  [key: string]: unknown;
};

export type PostWithEmptyBodyTestingOnlyRequest = {
  [key: string]: unknown;
};

export type PostWithEnumTestingOnlyRequest = {
  anEnum?: TestEnum;
  aProperty?: string | null;
};

export type PostWithRouteParamsAndEmptyBodyTestingOnlyRequest = {
  [key: string]: unknown;
};

export type PricingFeatureItem = {
  description?: string | null;
  isIncluded?: boolean;
};

export type PricingFeatureSection = {
  description?: string | null;
  features?: Array<PricingFeatureItem> | null;
};

export type PricingPlan = {
  cost?: number;
  currency?: string | null;
  description?: string | null;
  displayName?: string | null;
  featureSection?: Array<PricingFeatureSection> | null;
  isRecommended?: boolean;
  notes?: string | null;
  period?: PlanPeriod;
  setupCost?: number;
  trial?: SubscriptionTrialPeriod;
  id?: string | null;
};

export type PricingPlans = {
  annually?: Array<PricingPlan> | null;
  daily?: Array<PricingPlan> | null;
  eternally?: Array<PricingPlan> | null;
  monthly?: Array<PricingPlan> | null;
  weekly?: Array<PricingPlan> | null;
};

export type ProblemDetails = {
  type?: string | null;
  title?: string | null;
  status?: number | null;
  detail?: string | null;
  instance?: string | null;
  [key: string]: (unknown | string | number) | undefined;
};

export type ProfileAddress = {
  city?: string | null;
  countryCode?: string | null;
  line1?: string | null;
  line2?: string | null;
  line3?: string | null;
  state?: string | null;
  zip?: string | null;
};

export type RecordMeasureRequest = {
  additional?: {
    [key: string]: unknown;
  } | null;
  eventName: string;
};

export type RecordUseRequest = {
  additional?: {
    [key: string]: unknown;
  } | null;
  eventName: string;
};

export type RefreshTokenRequest = {
  refreshToken: string;
};

export type RefreshTokenResponse = {
  tokens?: AuthenticateTokens;
};

export type RegisterCarRequest = {
  /**
   * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
   */
  organizationId?: string | null;
  jurisdiction: string;
  make: string;
  model: string;
  numberPlate: string;
  year: number;
};

export type RegisterMachineRequest = {
  apiKeyExpiresOnUtc?: string | null;
  countryCode?: string | null;
  name: string;
  timezone?: string | null;
};

export type RegisterMachineResponse = {
  machine?: MachineCredential;
};

export type RegisterPersonPasswordRequest = {
  countryCode?: string | null;
  emailAddress: string;
  firstName: string;
  invitationToken?: string | null;
  lastName: string;
  password: string;
  termsAndConditionsAccepted?: boolean;
  timezone?: string | null;
};

export type RegisterPersonPasswordResponse = {
  credential?: PasswordCredential;
};

export type ResendGuestInvitationRequest = {
  [key: string]: unknown;
};

export type ResendPasswordResetRequest = {
  [key: string]: unknown;
};

export type ScheduleMaintenanceCarRequest = {
  /**
   * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
   */
  organizationId?: string | null;
  fromUtc?: string;
  toUtc?: string;
};

export type SearchAllAPIKeysResponse = {
  metadata?: SearchResultMetadata;
  keys?: Array<APIKey> | null;
};

export type SearchAllAuditsResponse = {
  metadata?: SearchResultMetadata;
  audits?: Array<Audit> | null;
};

export type SearchAllBookingsResponse = {
  metadata?: SearchResultMetadata;
  bookings?: Array<Booking> | null;
};

export type SearchAllCarUnavailabilitiesResponse = {
  metadata?: SearchResultMetadata;
  unavailabilities?: Array<Unavailability> | null;
};

export type SearchAllCarsResponse = {
  metadata?: SearchResultMetadata;
  cars?: Array<Car> | null;
};

export type SearchAllDomainEventsResponse = {
  metadata?: SearchResultMetadata;
  events?: Array<DomainEvent> | null;
};

export type SearchEmailDeliveriesResponse = {
  metadata?: SearchResultMetadata;
  emails?: Array<DeliveredEmail> | null;
};

export type SearchResultMetadata = {
  filter?: Filtering;
  limit?: number;
  offset?: number;
  sort?: Sorting;
  total?: number;
};

export type SearchSubscriptionHistoryResponse = {
  metadata?: SearchResultMetadata;
  invoices?: Array<Invoice> | null;
};

export type SendEmailRequest = {
  message: string;
};

export type SortDirection = "Ascending" | "Descending";

export type Sorting = {
  by?: string | null;
  direction?: SortDirection;
};

export type StatusesPostTestingOnlyRequest = {
  [key: string]: unknown;
};

export type StatusesPostWithLocationTestingOnlyRequest = {
  [key: string]: unknown;
};

export type StatusesPutPatchTestingOnlyRequest = {
  [key: string]: unknown;
};

export type StatusesTestingOnlyResponse = {
  message?: string | null;
};

export type StatusesTestingOnlySearchResponse = {
  messages?: Array<string> | null;
  metadata?: SearchResultMetadata;
};

export type StringMessageTestingOnlyResponse = {
  message?: string | null;
};

export type Subscription = {
  buyerId?: string | null;
  owningEntityId?: string | null;
  providerName?: string | null;
  providerState?: {
    [key: string]: string;
  } | null;
  id?: string | null;
};

export type SubscriptionPaymentMethod = {
  expiresOn?: string | null;
  status?: PaymentMethodStatus;
  type?: PaymentMethodType;
};

export type SubscriptionPlan = {
  id?: string | null;
  isTrial?: boolean;
  tier?: SubscriptionTier;
  trialEndDateUtc?: string | null;
};

export type SubscriptionStatus = "Unsubscribed" | "Activated" | "Canceled" | "Canceling";

export type SubscriptionTier = "Unsubscribed" | "Standard" | "Professional" | "Enterprise";

export type SubscriptionToMigrate = {
  buyerId?: string | null;
  owningEntityId?: string | null;
  providerName?: string | null;
  providerState?: {
    [key: string]: string;
  } | null;
  id?: string | null;
  buyer?: {
    [key: string]: string;
  } | null;
};

export type SubscriptionTrialPeriod = {
  frequency?: number;
  hasTrial?: boolean;
  unit?: PeriodFrequencyUnit;
};

export type SubscriptionWithPlan = {
  buyerId?: string | null;
  owningEntityId?: string | null;
  providerName?: string | null;
  providerState?: {
    [key: string]: string;
  } | null;
  id?: string | null;
  buyerReference?: string | null;
  canBeCanceled?: boolean;
  canBeUnsubscribed?: boolean;
  canceledDateUtc?: string | null;
  invoice?: InvoiceSummary;
  paymentMethod?: SubscriptionPaymentMethod;
  period?: PlanPeriod;
  plan?: SubscriptionPlan;
  status?: SubscriptionStatus;
  subscriptionReference?: string | null;
};

export type TakeOfflineCarRequest = {
  /**
   * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
   */
  organizationId?: string | null;
  fromUtc?: string | null;
  toUtc?: string | null;
};

export type TestEnum = "Value1" | "Value2" | "Value3";

export type TokenType = "OtherToken" | "AccessToken" | "RefreshToken";

export type TransferSubscriptionRequest = {
  userId?: string | null;
};

export type UnInviteMemberFromOrganizationResponse = {
  organization?: Organization;
};

export type UnassignPlatformRolesRequest = {
  roles?: Array<string> | null;
};

export type UnassignRolesFromOrganizationRequest = {
  roles?: Array<string> | null;
  userId: string;
};

export type Unavailability = {
  carId?: string | null;
  causedByReason?: string | null;
  causedByReference?: string | null;
  id?: string | null;
};

export type UpdateImageRequest = {
  description?: string | null;
};

export type UpdateImageResponse = {
  image?: Image;
};

export type UpdateUserResponse = {
  user?: EndUser;
};

export type UploadImageResponse = {
  image?: Image;
};

export type UserProfile = {
  address?: ProfileAddress;
  avatarUrl?: string | null;
  classification?: UserProfileClassification;
  displayName?: string | null;
  emailAddress?: string | null;
  name?: PersonName;
  phoneNumber?: string | null;
  timezone?: string | null;
  userId?: string | null;
  id?: string | null;
};

export type UserProfileClassification = "Person" | "Machine";

export type UserProfileForCaller = {
  address?: ProfileAddress;
  avatarUrl?: string | null;
  classification?: UserProfileClassification;
  displayName?: string | null;
  emailAddress?: string | null;
  name?: PersonName;
  phoneNumber?: string | null;
  timezone?: string | null;
  userId?: string | null;
  id?: string | null;
  defaultOrganizationId?: string | null;
  features?: Array<string> | null;
  isAuthenticated?: boolean;
  roles?: Array<string> | null;
};

export type ValidationsValidatedPostTestingOnlyRequest = {
  optionalField?: string | null;
  requiredField: string;
};

export type VerifyGuestInvitationResponse = {
  invitation?: Invitation;
};

export type CreateApiKeyForCallerData = {
  body?: CreateAPIKeyForCallerRequest;
};

export type CreateApiKeyForCallerResponse = CreateAPIKeyResponse;

export type CreateApiKeyForCallerError = ProblemDetails | unknown;

export type SearchAllApiKeysForCallerData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type SearchAllApiKeysForCallerResponse = SearchAllAPIKeysResponse;

export type SearchAllApiKeysForCallerError = ProblemDetails | unknown;

export type DeleteApiKeyData = {
  path: {
    Id: string;
  };
};

export type DeleteApiKeyResponse = void;

export type DeleteApiKeyError = ProblemDetails | unknown;

export type DeliverAuditData = {
  body?: DeliverAuditRequest;
};

export type DeliverAuditResponse = DeliverMessageResponse;

export type DeliverAuditError = ProblemDetails | unknown;

export type DrainAllAuditsData = {
  body?: DrainAllAuditsRequest;
};

export type DrainAllAuditsResponse = EmptyResponse;

export type DrainAllAuditsError = ProblemDetails | unknown;

export type SearchAllAuditsData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type SearchAllAuditsResponse2 = SearchAllAuditsResponse;

export type SearchAllAuditsError = ProblemDetails | unknown;

export type RefreshTokenData = {
  body?: RefreshTokenRequest;
};

export type RefreshTokenResponse2 = RefreshTokenResponse;

export type RefreshTokenError = ProblemDetails | unknown;

export type RevokeRefreshTokenData = {
  path: {
    RefreshToken: string;
  };
};

export type RevokeRefreshTokenResponse = void;

export type RevokeRefreshTokenError = ProblemDetails | unknown;

export type ExportSubscriptionsToMigrateData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type ExportSubscriptionsToMigrateResponse2 = ExportSubscriptionsToMigrateResponse;

export type ExportSubscriptionsToMigrateError = ProblemDetails | unknown;

export type MigrateSubscriptionPutData = {
  body?: MigrateSubscriptionRequest;
  path: {
    Id: string;
  };
};

export type MigrateSubscriptionPutResponse = MigrateSubscriptionResponse;

export type MigrateSubscriptionPutError = ProblemDetails | unknown;

export type MigrateSubscriptionPatchData = {
  body?: MigrateSubscriptionRequest;
  path: {
    Id: string;
  };
};

export type MigrateSubscriptionPatchResponse = MigrateSubscriptionResponse;

export type MigrateSubscriptionPatchError = ProblemDetails | unknown;

export type CancelBookingData = {
  path: {
    Id: string;
  };
  query?: {
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
  };
};

export type CancelBookingResponse = void;

export type CancelBookingError = ProblemDetails | unknown;

export type MakeBookingData = {
  body?: MakeBookingRequest;
};

export type MakeBookingResponse2 = MakeBookingResponse;

export type MakeBookingError = ProblemDetails | unknown;

export type SearchAllBookingsData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    FromUtc?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
    ToUtc?: string;
  };
};

export type SearchAllBookingsResponse2 = SearchAllBookingsResponse;

export type SearchAllBookingsError = ProblemDetails | unknown;

export type DeleteCarData = {
  path: {
    Id: string;
  };
  query?: {
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
  };
};

export type DeleteCarResponse = void;

export type DeleteCarError = ProblemDetails | unknown;

export type GetCarData = {
  path: {
    Id: string;
  };
  query?: {
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
  };
};

export type GetCarResponse2 = GetCarResponse;

export type GetCarError = ProblemDetails | unknown;

export type RegisterCarData = {
  body?: RegisterCarRequest;
};

export type RegisterCarResponse = GetCarResponse;

export type RegisterCarError = ProblemDetails | unknown;

export type SearchAllCarsData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type SearchAllCarsResponse2 = SearchAllCarsResponse;

export type SearchAllCarsError = ProblemDetails | unknown;

export type ScheduleMaintenanceCarPutData = {
  body?: ScheduleMaintenanceCarRequest;
  path: {
    Id: string;
  };
};

export type ScheduleMaintenanceCarPutResponse = GetCarResponse;

export type ScheduleMaintenanceCarPutError = ProblemDetails | unknown;

export type ScheduleMaintenanceCarPatchData = {
  body?: ScheduleMaintenanceCarRequest;
  path: {
    Id: string;
  };
};

export type ScheduleMaintenanceCarPatchResponse = GetCarResponse;

export type ScheduleMaintenanceCarPatchError = ProblemDetails | unknown;

export type SearchAllAvailableCarsData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    FromUtc?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
    ToUtc?: string;
  };
};

export type SearchAllAvailableCarsResponse = SearchAllCarsResponse;

export type SearchAllAvailableCarsError = ProblemDetails | unknown;

export type SearchAllCarUnavailabilitiesData = {
  path: {
    Id: string;
  };
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * An ID of the Organization. If not provided, the ID of the default organization of the authenticated user (if any) is used
     */
    OrganizationId?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type SearchAllCarUnavailabilitiesResponse2 = SearchAllCarUnavailabilitiesResponse;

export type SearchAllCarUnavailabilitiesError = ProblemDetails | unknown;

export type TakeOfflineCarPutData = {
  body?: TakeOfflineCarRequest;
  path: {
    Id: string;
  };
};

export type TakeOfflineCarPutResponse = GetCarResponse;

export type TakeOfflineCarPutError = ProblemDetails | unknown;

export type TakeOfflineCarPatchData = {
  body?: TakeOfflineCarRequest;
  path: {
    Id: string;
  };
};

export type TakeOfflineCarPatchResponse = GetCarResponse;

export type TakeOfflineCarPatchError = ProblemDetails | unknown;

export type DrainAllDomainEventsData = {
  body?: DrainAllDomainEventsRequest;
};

export type DrainAllDomainEventsResponse = EmptyResponse;

export type DrainAllDomainEventsError = ProblemDetails | unknown;

export type NotifyDomainEventData = {
  body?: NotifyDomainEventRequest;
};

export type NotifyDomainEventResponse = DeliverMessageResponse;

export type NotifyDomainEventError = ProblemDetails | unknown;

export type SearchAllDomainEventsData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type SearchAllDomainEventsResponse2 = SearchAllDomainEventsResponse;

export type SearchAllDomainEventsError = ProblemDetails | unknown;

export type ConfirmEmailDeliveredData = {
  body?: ConfirmEmailDeliveredRequest;
};

export type ConfirmEmailDeliveredResponse = EmptyResponse;

export type ConfirmEmailDeliveredError = ProblemDetails | unknown;

export type ConfirmEmailDeliveryFailedData = {
  body?: ConfirmEmailDeliveryFailedRequest;
};

export type ConfirmEmailDeliveryFailedResponse = EmptyResponse;

export type ConfirmEmailDeliveryFailedError = ProblemDetails | unknown;

export type DrainAllEmailsData = {
  body?: DrainAllEmailsRequest;
};

export type DrainAllEmailsResponse = EmptyResponse;

export type DrainAllEmailsError = ProblemDetails | unknown;

export type SearchEmailDeliveriesData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    SinceUtc?: string;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type SearchEmailDeliveriesResponse2 = SearchEmailDeliveriesResponse;

export type SearchEmailDeliveriesError = ProblemDetails | unknown;

export type SendEmailData = {
  body?: SendEmailRequest;
};

export type SendEmailResponse = DeliverMessageResponse;

export type SendEmailError = ProblemDetails | unknown;

export type AssignPlatformRolesData = {
  body?: AssignPlatformRolesRequest;
  path: {
    Id: string;
  };
};

export type AssignPlatformRolesResponse = UpdateUserResponse;

export type AssignPlatformRolesError = ProblemDetails | unknown;

export type UnassignPlatformRolesPutData = {
  body?: UnassignPlatformRolesRequest;
  path: {
    Id: string;
  };
};

export type UnassignPlatformRolesPutResponse = UpdateUserResponse;

export type UnassignPlatformRolesPutError = ProblemDetails | unknown;

export type UnassignPlatformRolesPatchData = {
  body?: UnassignPlatformRolesRequest;
  path: {
    Id: string;
  };
};

export type UnassignPlatformRolesPatchResponse = UpdateUserResponse;

export type UnassignPlatformRolesPatchError = ProblemDetails | unknown;

export type GetUserData = {
  path: {
    Id: string;
  };
};

export type GetUserResponse2 = GetUserResponse;

export type GetUserError = ProblemDetails | unknown;

export type GetFeatureFlagData = {
  path: {
    Name: string;
    UserId: string;
  };
  query?: {
    TenantId?: string;
  };
};

export type GetFeatureFlagResponse2 = GetFeatureFlagResponse;

export type GetFeatureFlagError = ProblemDetails | unknown;

export type GetAllFeatureFlagsResponse2 = GetAllFeatureFlagsResponse;

export type GetAllFeatureFlagsError = ProblemDetails | unknown;

export type GetFeatureFlagForCallerData = {
  path: {
    Name: string;
  };
};

export type GetFeatureFlagForCallerResponse = GetFeatureFlagResponse;

export type GetFeatureFlagForCallerError = ProblemDetails | unknown;

export type HealthCheckResponse2 = HealthCheckResponse;

export type HealthCheckError = ProblemDetails | unknown;

export type DeleteImageData = {
  path: {
    Id: string;
  };
};

export type DeleteImageResponse = void;

export type DeleteImageError = ProblemDetails | unknown;

export type GetImageData = {
  path: {
    Id: string;
  };
};

export type GetImageResponse2 = GetImageResponse;

export type GetImageError = ProblemDetails | unknown;

export type UpdateImagePutData = {
  body?: UpdateImageRequest;
  path: {
    Id: string;
  };
};

export type UpdateImagePutResponse = UpdateImageResponse;

export type UpdateImagePutError = ProblemDetails | unknown;

export type UpdateImagePatchData = {
  body?: UpdateImageRequest;
  path: {
    Id: string;
  };
};

export type UpdateImagePatchResponse = UpdateImageResponse;

export type UpdateImagePatchError = ProblemDetails | unknown;

export type DownloadImageData = {
  path: {
    Id: string;
  };
};

export type DownloadImageResponse = Blob | File;

export type DownloadImageError = ProblemDetails | unknown;

export type UploadImageData = {
  body?: {
    files: Array<Blob | File>;
    description?: string;
  };
};

export type UploadImageResponse2 = UploadImageResponse;

export type UploadImageError = ProblemDetails | unknown;

export type InviteGuestData = {
  body?: InviteGuestRequest;
};

export type InviteGuestResponse2 = InviteGuestResponse;

export type InviteGuestError = ProblemDetails | unknown;

export type ResendGuestInvitationData = {
  body?: ResendGuestInvitationRequest;
  path: {
    Token: string;
  };
};

export type ResendGuestInvitationResponse = EmptyResponse;

export type ResendGuestInvitationError = ProblemDetails | unknown;

export type VerifyGuestInvitationData = {
  path: {
    Token: string;
  };
};

export type VerifyGuestInvitationResponse2 = VerifyGuestInvitationResponse;

export type VerifyGuestInvitationError = ProblemDetails | unknown;

export type RegisterMachineData = {
  body?: RegisterMachineRequest;
};

export type RegisterMachineResponse2 = RegisterMachineResponse;

export type RegisterMachineError = ProblemDetails | unknown;

export type MailgunNotifyWebhookEventData = {
  body?: MailgunNotifyWebhookEventRequest;
};

export type MailgunNotifyWebhookEventResponse = EmptyResponse;

export type MailgunNotifyWebhookEventError = ProblemDetails | unknown;

export type ChangeDefaultOrganizationPutData = {
  body?: ChangeDefaultOrganizationRequest;
};

export type ChangeDefaultOrganizationPutResponse = UpdateUserResponse;

export type ChangeDefaultOrganizationPutError = ProblemDetails | unknown;

export type ChangeDefaultOrganizationPatchData = {
  body?: ChangeDefaultOrganizationRequest;
};

export type ChangeDefaultOrganizationPatchResponse = UpdateUserResponse;

export type ChangeDefaultOrganizationPatchError = ProblemDetails | unknown;

export type ListMembershipsForCallerData = {
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type ListMembershipsForCallerResponse2 = ListMembershipsForCallerResponse;

export type ListMembershipsForCallerError = ProblemDetails | unknown;

export type AssignRolesToOrganizationPutData = {
  body?: AssignRolesToOrganizationRequest;
  path: {
    Id: string;
  };
};

export type AssignRolesToOrganizationPutResponse = GetOrganizationResponse;

export type AssignRolesToOrganizationPutError = ProblemDetails | unknown;

export type AssignRolesToOrganizationPatchData = {
  body?: AssignRolesToOrganizationRequest;
  path: {
    Id: string;
  };
};

export type AssignRolesToOrganizationPatchResponse = GetOrganizationResponse;

export type AssignRolesToOrganizationPatchError = ProblemDetails | unknown;

export type ChangeOrganizationAvatarPutData = {
  body?: {
    files: Array<Blob | File>;
  };
  path: {
    Id: string;
  };
};

export type ChangeOrganizationAvatarPutResponse = GetOrganizationResponse;

export type ChangeOrganizationAvatarPutError = ProblemDetails | unknown;

export type ChangeOrganizationAvatarPatchData = {
  body?: {
    files: Array<Blob | File>;
  };
  path: {
    Id: string;
  };
};

export type ChangeOrganizationAvatarPatchResponse = GetOrganizationResponse;

export type ChangeOrganizationAvatarPatchError = ProblemDetails | unknown;

export type DeleteOrganizationAvatarData = {
  path: {
    Id: string;
  };
};

export type DeleteOrganizationAvatarResponse = GetOrganizationResponse;

export type DeleteOrganizationAvatarError = ProblemDetails | unknown;

export type ChangeOrganizationPutData = {
  body?: ChangeOrganizationRequest;
  path: {
    Id: string;
  };
};

export type ChangeOrganizationPutResponse = GetOrganizationResponse;

export type ChangeOrganizationPutError = ProblemDetails | unknown;

export type ChangeOrganizationPatchData = {
  body?: ChangeOrganizationRequest;
  path: {
    Id: string;
  };
};

export type ChangeOrganizationPatchResponse = GetOrganizationResponse;

export type ChangeOrganizationPatchError = ProblemDetails | unknown;

export type DeleteOrganizationData = {
  path: {
    Id: string;
  };
};

export type DeleteOrganizationResponse = void;

export type DeleteOrganizationError = ProblemDetails | unknown;

export type GetOrganizationData = {
  path: {
    Id: string;
  };
};

export type GetOrganizationResponse2 = GetOrganizationResponse;

export type GetOrganizationError = ProblemDetails | unknown;

export type CreateOrganizationData = {
  body?: CreateOrganizationRequest;
};

export type CreateOrganizationResponse = GetOrganizationResponse;

export type CreateOrganizationError = ProblemDetails | unknown;

export type GetOrganizationSettingsData = {
  path: {
    Id: string;
  };
};

export type GetOrganizationSettingsResponse2 = GetOrganizationSettingsResponse;

export type GetOrganizationSettingsError = ProblemDetails | unknown;

export type InviteMemberToOrganizationData = {
  body?: InviteMemberToOrganizationRequest;
  path: {
    Id: string;
  };
};

export type InviteMemberToOrganizationResponse2 = InviteMemberToOrganizationResponse;

export type InviteMemberToOrganizationError = ProblemDetails | unknown;

export type ListMembersForOrganizationData = {
  path: {
    Id: string;
  };
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
  };
};

export type ListMembersForOrganizationResponse2 = ListMembersForOrganizationResponse;

export type ListMembersForOrganizationError = ProblemDetails | unknown;

export type UnassignRolesFromOrganizationPutData = {
  body?: UnassignRolesFromOrganizationRequest;
  path: {
    Id: string;
  };
};

export type UnassignRolesFromOrganizationPutResponse = GetOrganizationResponse;

export type UnassignRolesFromOrganizationPutError = ProblemDetails | unknown;

export type UnassignRolesFromOrganizationPatchData = {
  body?: UnassignRolesFromOrganizationRequest;
  path: {
    Id: string;
  };
};

export type UnassignRolesFromOrganizationPatchResponse = GetOrganizationResponse;

export type UnassignRolesFromOrganizationPatchError = ProblemDetails | unknown;

export type UnInviteMemberFromOrganizationData = {
  path: {
    Id: string;
    UserId: string;
  };
};

export type UnInviteMemberFromOrganizationResponse2 = UnInviteMemberFromOrganizationResponse;

export type UnInviteMemberFromOrganizationError = ProblemDetails | unknown;

export type AuthenticatePasswordData = {
  body?: AuthenticatePasswordRequest;
};

export type AuthenticatePasswordResponse = AuthenticateResponse;

export type AuthenticatePasswordError = ProblemDetails | unknown;

export type CompletePasswordResetData = {
  body?: CompletePasswordResetRequest;
  path: {
    Token: string;
  };
};

export type CompletePasswordResetResponse = EmptyResponse;

export type CompletePasswordResetError = ProblemDetails | unknown;

export type ConfirmRegistrationPersonPasswordData = {
  body?: ConfirmRegistrationPersonPasswordRequest;
};

export type ConfirmRegistrationPersonPasswordResponse2 = ConfirmRegistrationPersonPasswordResponse;

export type ConfirmRegistrationPersonPasswordError = ProblemDetails | unknown;

export type GetRegistrationPersonConfirmationData = {
  query: {
    UserId: string;
  };
};

export type GetRegistrationPersonConfirmationResponse2 = GetRegistrationPersonConfirmationResponse;

export type GetRegistrationPersonConfirmationError = ProblemDetails | unknown;

export type RegisterPersonPasswordData = {
  body?: RegisterPersonPasswordRequest;
};

export type RegisterPersonPasswordResponse2 = RegisterPersonPasswordResponse;

export type RegisterPersonPasswordError = ProblemDetails | unknown;

export type InitiatePasswordResetData = {
  body?: InitiatePasswordResetRequest;
};

export type InitiatePasswordResetResponse = EmptyResponse;

export type InitiatePasswordResetError = ProblemDetails | unknown;

export type ResendPasswordResetData = {
  body?: ResendPasswordResetRequest;
  path: {
    Token: string;
  };
};

export type ResendPasswordResetResponse = EmptyResponse;

export type ResendPasswordResetError = ProblemDetails | unknown;

export type VerifyPasswordResetData = {
  path: {
    Token: string;
  };
};

export type VerifyPasswordResetResponse = EmptyResponse;

export type VerifyPasswordResetError = ProblemDetails | unknown;

export type ListPricingPlansResponse2 = ListPricingPlansResponse;

export type ListPricingPlansError = ProblemDetails | unknown;

export type DrainAllProvisioningsData = {
  body?: DrainAllProvisioningsRequest;
};

export type DrainAllProvisioningsResponse = EmptyResponse;

export type DrainAllProvisioningsError = ProblemDetails | unknown;

export type NotifyProvisioningData = {
  body?: NotifyProvisioningRequest;
};

export type NotifyProvisioningResponse = DeliverMessageResponse;

export type NotifyProvisioningError = ProblemDetails | unknown;

export type RecordMeasureData = {
  body?: RecordMeasureRequest;
};

export type RecordMeasureResponse = EmptyResponse;

export type RecordMeasureError = ProblemDetails | unknown;

export type RecordUseData = {
  body?: RecordUseRequest;
};

export type RecordUseResponse = EmptyResponse;

export type RecordUseError = ProblemDetails | unknown;

export type AuthenticateSingleSignOnData = {
  body?: AuthenticateSingleSignOnRequest;
};

export type AuthenticateSingleSignOnResponse = AuthenticateResponse;

export type AuthenticateSingleSignOnError = ProblemDetails | unknown;

export type CancelSubscriptionData = {
  path: {
    Id: string;
  };
};

export type CancelSubscriptionResponse = GetSubscriptionResponse;

export type CancelSubscriptionError = ProblemDetails | unknown;

export type GetSubscriptionData = {
  path: {
    Id: string;
  };
};

export type GetSubscriptionResponse2 = GetSubscriptionResponse;

export type GetSubscriptionError = ProblemDetails | unknown;

export type ChangeSubscriptionPlanPutData = {
  body?: ChangeSubscriptionPlanRequest;
  path: {
    Id: string;
  };
};

export type ChangeSubscriptionPlanPutResponse = GetSubscriptionResponse;

export type ChangeSubscriptionPlanPutError = ProblemDetails | unknown;

export type ChangeSubscriptionPlanPatchData = {
  body?: ChangeSubscriptionPlanRequest;
  path: {
    Id: string;
  };
};

export type ChangeSubscriptionPlanPatchResponse = GetSubscriptionResponse;

export type ChangeSubscriptionPlanPatchError = ProblemDetails | unknown;

export type ForceCancelSubscriptionData = {
  path: {
    Id: string;
  };
};

export type ForceCancelSubscriptionResponse = GetSubscriptionResponse;

export type ForceCancelSubscriptionError = ProblemDetails | unknown;

export type SearchSubscriptionHistoryData = {
  path: {
    Id: string;
  };
  query?: {
    /**
     * List of child resources to embed in the resource
     */
    Embed?: string;
    /**
     * List of fields to include and exclude in the search result
     */
    Filter?: string;
    FromUtc?: string;
    /**
     * The maximum number of search results to return
     */
    Limit?: number;
    /**
     * The zero-based index of the first search result
     */
    Offset?: number;
    /**
     * List of fields to sort the results on
     */
    Sort?: string;
    ToUtc?: string;
  };
};

export type SearchSubscriptionHistoryResponse2 = SearchSubscriptionHistoryResponse;

export type SearchSubscriptionHistoryError = ProblemDetails | unknown;

export type TransferSubscriptionPutData = {
  body?: TransferSubscriptionRequest;
  path: {
    Id: string;
  };
};

export type TransferSubscriptionPutResponse = GetSubscriptionResponse;

export type TransferSubscriptionPutError = ProblemDetails | unknown;

export type TransferSubscriptionPatchData = {
  body?: TransferSubscriptionRequest;
  path: {
    Id: string;
  };
};

export type TransferSubscriptionPatchResponse = GetSubscriptionResponse;

export type TransferSubscriptionPatchError = ProblemDetails | unknown;

export type GetCallerWithHmacTestingOnlyResponse = GetCallerTestingOnlyResponse;

export type GetCallerWithHmacTestingOnlyError = ProblemDetails | unknown;

export type GetCallerWithTokenOrApiKeyTestingOnlyResponse = GetCallerTestingOnlyResponse;

export type GetCallerWithTokenOrApiKeyTestingOnlyError = ProblemDetails | unknown;

export type AuthorizeByNothingTestingOnlyResponse = GetCallerTestingOnlyResponse;

export type AuthorizeByNothingTestingOnlyError = ProblemDetails | unknown;

export type AuthorizeByFeatureTestingOnlyResponse = GetCallerTestingOnlyResponse;

export type AuthorizeByFeatureTestingOnlyError = ProblemDetails | unknown;

export type AuthorizeByRoleTestingOnlyResponse = GetCallerTestingOnlyResponse;

export type AuthorizeByRoleTestingOnlyError = ProblemDetails | unknown;

export type ContentNegotiationsTestingOnlyData = {
  query?: {
    Format?: string;
  };
};

export type ContentNegotiationsTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type ContentNegotiationsTestingOnlyError = ProblemDetails | unknown;

export type DestroyAllRepositoriesData = {
  body?: DestroyAllRepositoriesRequest;
};

export type DestroyAllRepositoriesResponse = EmptyResponse;

export type DestroyAllRepositoriesError = ProblemDetails | unknown;

export type ErrorsErrorTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type ErrorsErrorTestingOnlyError = ProblemDetails | unknown;

export type ErrorsThrowTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type ErrorsThrowTestingOnlyError = ProblemDetails | unknown;

export type FormatsTestingOnlyData = {
  body?: FormatsTestingOnlyRequest;
};

export type FormatsTestingOnlyResponse2 = FormatsTestingOnlyResponse;

export type FormatsTestingOnlyError = ProblemDetails | unknown;

export type PostWithEmptyBodyTestingOnlyData = {
  body?: PostWithEmptyBodyTestingOnlyRequest;
};

export type PostWithEmptyBodyTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type PostWithEmptyBodyTestingOnlyError = ProblemDetails | unknown;

export type PostWithRouteParamsAndEmptyBodyTestingOnlyData = {
  body?: PostWithRouteParamsAndEmptyBodyTestingOnlyRequest;
  path: {
    ANumberProperty: number;
    AStringProperty: string;
  };
};

export type PostWithRouteParamsAndEmptyBodyTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type PostWithRouteParamsAndEmptyBodyTestingOnlyError = ProblemDetails | unknown;

export type PostWithEnumTestingOnlyData = {
  body?: PostWithEnumTestingOnlyRequest;
};

export type PostWithEnumTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type PostWithEnumTestingOnlyError = ProblemDetails | unknown;

export type GetInsecureTestingOnlyResponse = EmptyResponse;

export type GetInsecureTestingOnlyError = ProblemDetails | unknown;

export type PostInsecureTestingOnlyData = {
  body?: PostInsecureTestingOnlyRequest;
};

export type PostInsecureTestingOnlyResponse = EmptyResponse;

export type PostInsecureTestingOnlyError = ProblemDetails | unknown;

export type OpenApiGetTestingOnlyData = {
  path: {
    /**
     * anid
     */
    Id: string;
  };
  query: {
    /**
     * anoptionalfield
     */
    OptionalField?: string;
    /**
     * arequiredfield
     */
    RequiredField: string;
  };
};

export type OpenApiGetTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type OpenApiGetTestingOnlyError = ProblemDetails | unknown;

export type OpenApiPostTestingOnlyData = {
  body?: OpenApiPostTestingOnlyRequest;
  path: {
    Id: string;
  };
};

export type OpenApiPostTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type OpenApiPostTestingOnlyError = ProblemDetails | unknown;

export type OpenApiPutTestingOnlyPutData = {
  body?: OpenApiPutTestingOnlyRequest;
  path: {
    Id: string;
  };
};

export type OpenApiPutTestingOnlyPutResponse = StringMessageTestingOnlyResponse;

export type OpenApiPutTestingOnlyPutError = ProblemDetails | unknown;

export type OpenApiPutTestingOnlyPatchData = {
  body?: OpenApiPutTestingOnlyRequest;
  path: {
    Id: string;
  };
};

export type OpenApiPutTestingOnlyPatchResponse = StringMessageTestingOnlyResponse;

export type OpenApiPutTestingOnlyPatchError = ProblemDetails | unknown;

export type OpenApiPostMultiPartFormTestingOnlyData = {
  body?: {
    files: Array<Blob | File>;
    optionalField?: string;
    requiredField: string;
  };
  path: {
    Id: string;
  };
};

export type OpenApiPostMultiPartFormTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type OpenApiPostMultiPartFormTestingOnlyError = ProblemDetails | unknown;

export type RequestCorrelationsTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type RequestCorrelationsTestingOnlyError = ProblemDetails | unknown;

export type StatusesDeleteTestingOnlyResponse = void;

export type StatusesDeleteTestingOnlyError = ProblemDetails | unknown;

export type StatusesDeleteWithResponseTestingOnlyResponse = StatusesTestingOnlyResponse;

export type StatusesDeleteWithResponseTestingOnlyError = ProblemDetails | unknown;

export type StatusesGetTestingOnlyResponse = StatusesTestingOnlyResponse;

export type StatusesGetTestingOnlyError = ProblemDetails | unknown;

export type StatusesPostTestingOnlyData = {
  body?: StatusesPostTestingOnlyRequest;
};

export type StatusesPostTestingOnlyResponse = StatusesTestingOnlyResponse;

export type StatusesPostTestingOnlyError = ProblemDetails | unknown;

export type StatusesPostWithLocationTestingOnlyData = {
  body?: StatusesPostWithLocationTestingOnlyRequest;
};

export type StatusesPostWithLocationTestingOnlyResponse = StatusesTestingOnlyResponse;

export type StatusesPostWithLocationTestingOnlyError = ProblemDetails | unknown;

export type StatusesPutPatchTestingOnlyPutData = {
  body?: StatusesPutPatchTestingOnlyRequest;
};

export type StatusesPutPatchTestingOnlyPutResponse = StatusesTestingOnlyResponse;

export type StatusesPutPatchTestingOnlyPutError = ProblemDetails | unknown;

export type StatusesPutPatchTestingOnlyPatchData = {
  body?: StatusesPutPatchTestingOnlyRequest;
};

export type StatusesPutPatchTestingOnlyPatchResponse = StatusesTestingOnlyResponse;

export type StatusesPutPatchTestingOnlyPatchError = ProblemDetails | unknown;

export type StatusesSearchTestingOnlyResponse = StatusesTestingOnlySearchResponse;

export type StatusesSearchTestingOnlyError = ProblemDetails | unknown;

export type ValidationsUnvalidatedTestingOnlyData = {
  query?: {
    Id?: string;
  };
};

export type ValidationsUnvalidatedTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type ValidationsUnvalidatedTestingOnlyError = ProblemDetails | unknown;

export type ValidationsValidatedGetTestingOnlyData = {
  path: {
    Id: string;
  };
  query: {
    OptionalField?: string;
    RequiredField: string;
  };
};

export type ValidationsValidatedGetTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type ValidationsValidatedGetTestingOnlyError = ProblemDetails | unknown;

export type ValidationsValidatedPostTestingOnlyData = {
  body?: ValidationsValidatedPostTestingOnlyRequest;
  path: {
    Id: string;
  };
};

export type ValidationsValidatedPostTestingOnlyResponse = StringMessageTestingOnlyResponse;

export type ValidationsValidatedPostTestingOnlyError = ProblemDetails | unknown;

export type DeliverUsageData = {
  body?: DeliverUsageRequest;
};

export type DeliverUsageResponse = DeliverMessageResponse;

export type DeliverUsageError = ProblemDetails | unknown;

export type DrainAllUsagesData = {
  body?: DrainAllUsagesRequest;
};

export type DrainAllUsagesResponse = EmptyResponse;

export type DrainAllUsagesError = ProblemDetails | unknown;

export type ChangeProfileContactAddressPutData = {
  body?: ChangeProfileContactAddressRequest;
  path: {
    UserId: string;
  };
};

export type ChangeProfileContactAddressPutResponse = GetProfileResponse;

export type ChangeProfileContactAddressPutError = ProblemDetails | unknown;

export type ChangeProfileContactAddressPatchData = {
  body?: ChangeProfileContactAddressRequest;
  path: {
    UserId: string;
  };
};

export type ChangeProfileContactAddressPatchResponse = GetProfileResponse;

export type ChangeProfileContactAddressPatchError = ProblemDetails | unknown;

export type ChangeProfilePutData = {
  body?: ChangeProfileRequest;
  path: {
    UserId: string;
  };
};

export type ChangeProfilePutResponse = GetProfileResponse;

export type ChangeProfilePutError = ProblemDetails | unknown;

export type ChangeProfilePatchData = {
  body?: ChangeProfileRequest;
  path: {
    UserId: string;
  };
};

export type ChangeProfilePatchResponse = GetProfileResponse;

export type ChangeProfilePatchError = ProblemDetails | unknown;

export type ChangeProfileAvatarPutData = {
  body?: {
    files: Array<Blob | File>;
  };
  path: {
    UserId: string;
  };
};

export type ChangeProfileAvatarPutResponse = ChangeProfileAvatarResponse;

export type ChangeProfileAvatarPutError = ProblemDetails | unknown;

export type ChangeProfileAvatarPatchData = {
  body?: {
    files: Array<Blob | File>;
  };
  path: {
    UserId: string;
  };
};

export type ChangeProfileAvatarPatchResponse = ChangeProfileAvatarResponse;

export type ChangeProfileAvatarPatchError = ProblemDetails | unknown;

export type DeleteProfileAvatarData = {
  path: {
    UserId: string;
  };
};

export type DeleteProfileAvatarResponse2 = DeleteProfileAvatarResponse;

export type DeleteProfileAvatarError = ProblemDetails | unknown;

export type GetProfileForCallerResponse2 = GetProfileForCallerResponse;

export type GetProfileForCallerError = ProblemDetails | unknown;
